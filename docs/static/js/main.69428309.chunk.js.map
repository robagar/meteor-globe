{"version":3,"sources":["theme.ts","3d/geometry.ts","ui/MeteorTooltip.tsx","3d/InstancedMeteors.tsx","3d/Globe.tsx","data/showers.ts","ui/MeteorInfo.tsx","store.ts","data/meteors.ts","ui/LoadMeteorsMenu.tsx","data/GMN.ts","GMNProvider.tsx","ui/LoadDailyMeteorsDialog.tsx","data/cameras.ts","ui/filter/ShowerFilter.tsx","interfaces.ts","ui/filter/MagnitudeFilter.tsx","ui/Filter.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","palette","mode","EARTH_RADIUS","radians","degrees","Math","PI","position","latitude","longitude","altitude","lat","long","r","cos","sin","xyz","point","height","MeteorTooltip","props","meteor","shower","beginTime","magnitude","duration","stationCodes","className","code","join","DEFAULT_COLOR","Color","HIGHLIGHTED_COLOR","SELECTED_COLOR","ZERO_MATRIX","Matrix4","InstancedMeteors","data","selectedMeteor","selectMeteor","filteredMeteors","ref","useRef","old","useFrame","camera","current","console","warn","mesh","i","index","setMatrixAt","buildMeteorMatrix","color","hoverInstanceIdRef","setColorAt","length","instanceMatrix","needsUpdate","instanceColor","useState","undefined","hover","setHover","invalidate","useThree","lastFilterMeteorsRef","args","onClick","e","instanceId","onPointerOver","onPointerOut","vertexShader","fragmentShader","transparent","depthWrite","Html","calculatePosition","el","size","getIndex","parent","InstancedMesh","getMatrixAt","m","objectPos","v1","setFromMatrixPosition","project","widthHalf","width","heightHalf","x","y","calculateTooltipPosition","Vector3","cameraPosition","begin","end","brightness","tail","head","tx","ty","tz","center","cx","cy","cz","vector","max","direction","clone","normalize","view","sub","perp","cross","up","right","rotation","xAxis","yAxis","zAxis","makeBasis","quaternion","Quaternion","setFromRotationMatrix","scale","compose","Globe","meteors","fov","near","far","material","useTexture","map","bumpMap","specularMap","frameloop","OrbitControls","minDistance","maxDistance","zoomSpeed","rotateSpeed","intensity","showers","require","showersByCode","Map","s","set","SPORADIC_CODE","SPORADIC","name","numMeteors","getShower","get","u","isSporadic","buildActiveShowers","activeShower","push","activeShowers","values","sort","a","b","MeteorInfo","enableMapSet","store","Store","highlightedMarker","markers","identifier","label","loading","meteorDataInfo","url","title","filter","min","METEORS_YESTERDAY","METEORS_LATEST_DAILY","info","update","fetchMeteorData","async","nextIndex","line","slice","fields","split","f","trim","parseFloat","showerCode","averageSpeed","peakHeight","mass","fetchline","filterMeteors","includes","LoadMeteorsMenu","anchorEl","open","onClose","onLoadMeteors","showLoadDailyDialog","Menu","MenuItem","URL_BASE","DAILY_URL_REGEX","GMN","_dailyFileNamesByDate","_dailyInitialized","filename","date","d","toFormat","this","Error","toLocaleString","DateTime","DATE_FULL","dailyMeteorsUrl","fetch","ok","text","ms","matchAll","groups","error","has","Context","createContext","GMNProvider","children","contextValue","gmn","useConstant","Provider","value","useGMN","c","useContext","LoadDailyMeteorsDialog","dailyInitialized","availablityInitialized","setAvailablityInitialized","useAsyncEffect","initDailyMeteorsAvailable","setDate","DailyMeteorsDatePicker","DatePicker","onChange","renderInput","params","TextField","inputFormat","shouldDisableDate","now","dailyMeteorsAvailable","Dialog","DialogTitle","DialogContent","Skeleton","DialogActions","Button","disabled","response","csv","records","parse","columns","camera_id","obs_latitude","obs_longitude","Promise","reject","statusText","initCameras","loadCameras","then","cameras","catch","ShowerFilter","filterShowers","InputLabel","id","Select","labelId","multiple","input","OutlinedInput","renderValue","selected","event","target","MenuProps","Checkbox","checked","ListItemText","formatter","format","Box","sx","display","flexFlow","autoFocus","PaperProps","style","maxHeight","ITEM_HEIGHT","MIN_MAGNITUDE","MAX_MAGNITUDE","MagnitudeFilter","my","px","Slider","valueLabelDisplay","step","marks","valueUnless","unless","Filter","Toolbar","justifyContent","Typography","variant","IconButton","FormControl","LuxonSettings","defaultZone","queryParams","URLSearchParams","window","location","search","Intl","NumberFormat","App","setError","useEffect","tryLoadMeteors","useCallback","loadMeteors","test","meteorDataInfoFromParams","filterVisible","setFilterVisible","Header","menuVisible","setMenuVisible","menuAnchorEl","setMenuAnchorEl","loadDailyMeteorsDialogOpen","setLoadDailyMeteorsDialogOpen","AppBar","boxShadow","flexGrow","currentTarget","dailyMeteorsInfo","LocalizationProvider","dateAdapter","DateAdapter","Snackbar","Alert","severity","flex","Footer","Drawer","anchor","align","Date","getFullYear","Link","href","rel","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","Suspense","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.69428309.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport default theme;\n","import { Degrees, Radians, Km, XYZ, LatLongHt } from \"../interfaces\";\nexport const EARTH_RADIUS: Km = 6371.37;\n\nexport function radians(degrees: Degrees): Radians {\n  return (Math.PI * degrees) / 180;\n}\n\nexport function position(\n  latitude: Degrees,\n  longitude: Degrees,\n  altitude: Km\n): XYZ {\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = altitude + EARTH_RADIUS;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n\nexport function xyz(point: LatLongHt): XYZ {\n  const { latitude, longitude, height } = point;\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = EARTH_RADIUS + height;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n","import { MeteorData } from \"../interfaces\";\nimport \"./MeteorTooltip.css\";\n\nexport interface MeteorTooltipProps {\n  meteor: MeteorData;\n}\n\nexport function MeteorTooltip(props: MeteorTooltipProps) {\n  const { meteor } = props;\n  const { shower, beginTime, magnitude, duration, stationCodes } = meteor;\n\n  return (\n    <div className=\"root\">\n      <div className=\"showerCode\">{shower.code}</div>\n      <div className=\"beginTime\">{beginTime}</div>\n      <div className=\"magnitude\">Mag {magnitude}</div>\n      <div className=\"duration\">{duration}s</div>\n\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </div>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport {\n  Matrix4,\n  Vector3,\n  Quaternion,\n  InstancedMesh,\n  Color,\n  Object3D,\n  Camera,\n} from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { Html } from \"@react-three/drei\";\n\nimport { MeteorData, XYZ } from \"../interfaces\";\nimport { MeteorTooltip } from \"../ui/MeteorTooltip\";\nimport { xyz } from \"./geometry\";\n\nconst MIN_WIDTH = 0.1;\nconst MAG_ZERO_WIDTH = 2;\n\nconst DEFAULT_COLOR = new Color(\"white\");\nconst HIGHLIGHTED_COLOR = new Color(\"goldenrod\");\nconst SELECTED_COLOR = new Color(\"hotpink\");\n\n// workaround for R3F bug - pointer events stop working if instanced mesh is reinstantiated\nconst MAX_METEORS = 10000;\n\nconst ZERO_MATRIX = new Matrix4();\n\nexport interface InstancedMeteorsProps {\n  data: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData) => void;\n  filteredMeteors: boolean[];\n}\n\nexport function InstancedMeteors(props: InstancedMeteorsProps) {\n  const { data, selectedMeteor, selectMeteor, filteredMeteors } = props;\n\n  const vertexShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      vUv = uv;\n      vColor = instanceColor;\n      gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position,1.0);\n    }\n  `;\n\n  const fragmentShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      float x = vUv.x;\n      float y = vUv.y;\n      float c = (x < 0.5 ? x : (1.0 - x)) * 2.0;\n      float p = 0.75;\n      float l = y < p ? (y / p) : (1.0 - y) / (1.0 - p);\n      float opacity = c * l;\n      gl_FragColor = vec4(vColor, opacity);\n    }\n  `;\n\n  const ref = useRef<InstancedMesh>();\n  const old = useRef<InstancedMesh>();\n\n  useFrame(({ camera }) => {\n    if (old.current !== ref.current) {\n      console.warn(\"new InstancedMesh\", ref.current);\n      old.current = ref.current;\n    }\n\n    // console.info(\"frame!\", data.length);\n    const mesh = ref.current;\n    if (mesh) {\n      for (const meteor of data) {\n        const i = meteor.index;\n        mesh.setMatrixAt(\n          i,\n          filteredMeteors[i]\n            ? buildMeteorMatrix(meteor, camera.position)\n            : ZERO_MATRIX\n        );\n        let color = DEFAULT_COLOR;\n        if (selectedMeteor && i === selectedMeteor.index)\n          color = SELECTED_COLOR;\n        else if (i === hoverInstanceIdRef.current) color = HIGHLIGHTED_COLOR;\n        mesh.setColorAt(i, color);\n      }\n\n      for (let i = data.length; i < MAX_METEORS; ++i) {\n        mesh.setMatrixAt(i, ZERO_MATRIX);\n      }\n\n      mesh.instanceMatrix.needsUpdate = true;\n      if (mesh.instanceColor) mesh.instanceColor.needsUpdate = true;\n    }\n  });\n\n  const [hover, setHover] = useState<MeteorData | undefined>(undefined);\n  const hoverInstanceIdRef = useRef<number | undefined>();\n\n  const { invalidate } = useThree();\n\n  const lastFilterMeteorsRef = useRef<boolean[]>([]);\n  if (filteredMeteors !== lastFilterMeteorsRef.current) {\n    lastFilterMeteorsRef.current = filteredMeteors;\n    invalidate();\n  }\n\n  return (\n    <>\n      {data.length && (\n        <instancedMesh\n          ref={ref}\n          args={[undefined, undefined, MAX_METEORS /*data.length*/]}\n          onClick={(e) => {\n            // console.info(\"onClick\", e.instanceId);\n            const i = e.instanceId;\n            if (i !== undefined) {\n              selectMeteor(data[i]);\n              invalidate();\n            }\n          }}\n          onPointerOver={(e) => {\n            // console.info(\"onPointerOver\", e.instanceId);\n            const i = e.instanceId;\n            if (i !== undefined) {\n              setHover(data[i]);\n              if (hoverInstanceIdRef.current !== i) {\n                hoverInstanceIdRef.current = i;\n              }\n            }\n          }}\n          onPointerOut={(e) => {\n            setHover(undefined);\n            if (hoverInstanceIdRef.current === e.instanceId) {\n              hoverInstanceIdRef.current = undefined;\n            }\n          }}\n        >\n          <planeGeometry args={[1, 1]} />\n          <shaderMaterial\n            vertexShader={vertexShader}\n            fragmentShader={fragmentShader}\n            transparent={true}\n            depthWrite={false}\n          />\n\n          {hover && (\n            <Html\n              calculatePosition={(el, camera, size) =>\n                calculateTooltipPosition(\n                  el,\n                  camera,\n                  size,\n                  () => hoverInstanceIdRef.current\n                )\n              }\n            >\n              <MeteorTooltip meteor={hover} />\n            </Html>\n          )}\n        </instancedMesh>\n      )}\n    </>\n  );\n}\n\nconst v1 = new Vector3();\nconst m = new Matrix4();\nfunction calculateTooltipPosition(\n  el: Object3D,\n  camera: Camera,\n  size: { width: number; height: number },\n  getIndex: () => number | undefined\n) {\n  const index = getIndex();\n\n  if (el.parent instanceof InstancedMesh && index !== undefined) {\n    el.parent.getMatrixAt(index, m);\n  } else {\n    // hide tooltip offscreen\n    return [-9999999, -9999999];\n  }\n  const objectPos = v1.setFromMatrixPosition(m);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [\n    objectPos.x * widthHalf + widthHalf,\n    -(objectPos.y * heightHalf) + heightHalf,\n  ];\n}\n\nfunction buildMeteorMatrix(\n  meteor: MeteorData,\n  cameraPosition: Vector3\n): Matrix4 {\n  const { begin, end, magnitude } = meteor;\n\n  const brightness = 1 - magnitude * 0.2;\n\n  const tail = xyz(begin);\n  const head = xyz(end);\n\n  const [tx, ty, tz] = tail;\n  const [hx, hy, hz] = head;\n\n  const center: XYZ = [(tx + hx) / 2, (ty + hy) / 2, (tz + hz) / 2];\n  const [cx, cy, cz] = center;\n  const position = new Vector3(cx, cy, cz);\n\n  const vector = new Vector3(\n    head[0] - tail[0],\n    head[1] - tail[1],\n    head[2] - tail[2]\n  );\n  const length = vector.length();\n  const width = Math.max(MIN_WIDTH, MAG_ZERO_WIDTH * brightness);\n  const direction = vector.clone();\n  direction.normalize();\n\n  // build matrix\n\n  const view = position.clone().sub(cameraPosition).normalize();\n  const perp = direction.clone().cross(view).normalize();\n  const up = direction.clone().cross(perp).normalize();\n  const right = direction.clone().cross(up);\n\n  const rotation = new Matrix4();\n  const xAxis = right;\n  const yAxis = direction;\n  const zAxis = up;\n  rotation.makeBasis(xAxis, yAxis, zAxis);\n\n  const quaternion = new Quaternion();\n  quaternion.setFromRotationMatrix(rotation);\n\n  const scale = new Vector3(width, length, 1);\n\n  const m = new Matrix4();\n  m.compose(position, quaternion, scale);\n  return m;\n}\n","import { Canvas } from \"@react-three/fiber\";\nimport { useTexture, OrbitControls } from \"@react-three/drei\";\n\nimport { EARTH_RADIUS, position } from \"./geometry\";\n\nimport { /*Marker, */ MarkerProps } from \"./Marker\";\nimport { MeteorData } from \"../interfaces\";\nimport { InstancedMeteors } from \"./InstancedMeteors\";\n\nimport \"./Globe.css\";\n\nexport interface GlobeProps {\n  markers: MarkerProps[];\n  meteors: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData) => void;\n  filteredMeteors: boolean[];\n}\n\nconst MIN_CAMERA_HEIGHT = 200;\nconst MAX_CAMERA_HEIGHT = 10000;\n\nexport function Globe(props: GlobeProps) {\n  const {\n    /*markers,*/ meteors,\n    selectedMeteor,\n    selectMeteor,\n    filteredMeteors,\n  } = props;\n\n  const camera = {\n    fov: 75,\n    near: 10,\n    far: 100000,\n    position: position(50.22, -4.95, 1500),\n  };\n  const material = useTexture({\n    map: \"/meteor-globe/textures/2_no_clouds_4k.jpeg\",\n    bumpMap: \"/meteor-globe/textures/elev_bump_4k.jpeg\",\n    specularMap: \"/meteor-globe/textures/water_4k.png\",\n  });\n  return (\n    <Canvas className=\"globeCanvas\" frameloop=\"demand\" camera={camera}>\n      <OrbitControls\n        minDistance={EARTH_RADIUS + MIN_CAMERA_HEIGHT}\n        maxDistance={EARTH_RADIUS + MAX_CAMERA_HEIGHT}\n        zoomSpeed={0.1}\n        rotateSpeed={0.1}\n      />\n      <ambientLight intensity={0.1} />\n      <directionalLight color=\"white\" position={position(0, 0, 1)} />\n      <mesh>\n        <sphereGeometry args={[EARTH_RADIUS, 128, 128]} />\n        <meshPhongMaterial {...material} />\n      </mesh>\n      {/*      {markers.map((m) => (\n        <Marker key={`marker-${m.identifier}`} {...m} />\n      ))}\n*/}\n      <InstancedMeteors\n        data={meteors}\n        selectedMeteor={selectedMeteor}\n        selectMeteor={selectMeteor}\n        filteredMeteors={filteredMeteors}\n      />\n    </Canvas>\n  );\n}\n","import { MeteorData, ShowerData, ActiveShowerData } from \"../interfaces\";\n\nconst showers = require(\"./showers.json\");\nconst showersByCode = new Map<string, ShowerData>();\nfor (const s of showers) {\n  // console.info(s);\n  showersByCode.set(s.code, s);\n}\n\nconst SPORADIC_CODE = \"...\";\nconst SPORADIC = {\n  code: SPORADIC_CODE,\n  name: \"(sporadic)\",\n  numMeteors: 0,\n};\n\nexport function getShower(code: string): ShowerData {\n  if (code === SPORADIC_CODE) return SPORADIC;\n\n  const s = showersByCode.get(code);\n  if (s) return s;\n\n  // not in IAU list\n  const u = {\n    code,\n    name: \"(unknown)\",\n  };\n  showersByCode.set(code, u);\n  return u;\n}\n\nexport function isSporadic(shower: ShowerData) {\n  return shower.code === SPORADIC_CODE;\n}\n\nexport function buildActiveShowers(meteors: MeteorData[]): ActiveShowerData[] {\n  const map = new Map<ShowerData, ActiveShowerData>();\n\n  for (const meteor of meteors) {\n    const { shower } = meteor;\n    const activeShower = map.get(shower);\n    if (activeShower) {\n      activeShower.meteors.push(meteor);\n    } else {\n      map.set(shower, {\n        shower,\n        meteors: [meteor],\n      });\n    }\n  }\n\n  const activeShowers = [...map.values()];\n  activeShowers.sort((a, b) => b.meteors.length - a.meteors.length);\n  return activeShowers;\n}\n","import { MeteorData } from \"../interfaces\";\nimport { isSporadic } from \"../data/showers\";\nimport \"./MeteorInfo.css\";\n\nexport interface MeteorInfoProps {\n  meteor: MeteorData;\n}\n\nexport function MeteorInfo(props: MeteorInfoProps) {\n  const { meteor } = props;\n  const {\n    shower,\n    beginTime,\n    magnitude,\n    duration,\n    // averageSpeed,\n    stationCodes,\n  } = meteor;\n\n  return (\n    <div className=\"root\">\n      <div>\n        {!isSporadic(shower) && (\n          <span className=\"showerCode\">\n            {shower.code}\n            {\" — \"}\n          </span>\n        )}\n        <span className=\"showerName\">{shower.name}</span>\n      </div>\n      <div className=\"beginTime\">{beginTime}</div>\n      <div className=\"magnitude\">Mag {magnitude}</div>\n      <div className=\"duration\">{duration}s</div>\n      {/*<div className=\"averageSpeed\">{averageSpeed}kms⁻¹</div>*/}\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </div>\n  );\n}\n","import { Store } from \"pullstate\";\nimport { enableMapSet } from \"immer\";\n\nimport { AppState } from \"./interfaces\";\nimport { MarkerProps } from \"./3d/Marker\";\n\nenableMapSet();\n\nexport const store = new Store<AppState>({\n  highlightedMarker: \"\",\n  markers: new Map<string, MarkerProps>([\n    [\n      \"UK003C\",\n      {\n        identifier: \"UK003C\",\n        latitude: 50.224871,\n        longitude: -4.949858,\n        label: \"UK003C\",\n      },\n    ],\n  ]),\n  loading: true,\n  meteorDataInfo: {\n    url: \"\",\n    title: \"\",\n  },\n  meteors: [],\n  selectedMeteor: undefined,\n  activeShowers: [],\n  filter: {\n    showers: [],\n    magnitude: { min: undefined, max: undefined },\n  },\n});\n","import fetchline from \"fetchline\";\n\nimport { store } from \"../store\";\nimport { MeteorDataInfo, MeteorData, FilterData } from \"../interfaces\";\nimport { getShower, buildActiveShowers } from \"./showers\";\n\nexport const DEFAULT_COLOR = [1, 1, 1];\nexport const HIGHLIGHTED_COLOR = [1.0, 0.27, 0.71]; // CSS hotpink #FF69B4\n\nexport const METEORS_YESTERDAY = {\n  url: \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_yesterday.txt\",\n  title: \"Yesterday\",\n};\n\nexport const METEORS_LATEST_DAILY = {\n  url: \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_latest_daily.txt\",\n  title: \"Latest Daily\",\n};\n\nexport function meteorDataInfoFromParams(\n  params: URLSearchParams\n): MeteorDataInfo {\n  const test = params.get(\"test\");\n  if (test !== null) {\n    switch (test) {\n      case \"one_perseid\":\n        return {\n          url: \"/meteor-globe/data/one_perseid.txt\",\n          title: \"Test - One Perseid\",\n        };\n      default:\n        return {\n          url: \"/meteor-globe/data/traj_summary_20210812_solrange_140.0-141.0.txt\",\n          title: \"Test - Lots of Perseids\",\n        };\n    }\n  }\n\n  // default to all detected by GMN yesterday\n  return METEORS_YESTERDAY;\n}\n\nexport async function loadMeteors(info: MeteorDataInfo) {\n  console.info(\"[meteors] LOAD\", info.title, info.url);\n\n  store.update((s) => {\n    s.meteorDataInfo = info;\n    s.loading = true;\n    s.selectedMeteor = undefined;\n    s.meteors = [];\n    s.activeShowers = [];\n  });\n\n  try {\n    const meteors = await fetchMeteorData(info.url);\n    const activeShowers = buildActiveShowers(meteors);\n    store.update((s) => {\n      s.loading = false;\n      s.meteors = meteors;\n      s.activeShowers = activeShowers;\n      s.filter.showers = activeShowers.map((a) => a.shower);\n    });\n  } finally {\n    store.update((s) => {\n      s.loading = false;\n    });\n  }\n}\n\n// column indices\nconst BEGIN_UTC_TIME = 1;\nconst IAU_CODE = 3;\nconst AVERAGE_SPEED = 58;\nconst BEGIN_LATITUDE = 60;\nconst BEGIN_LONGITUDE = 62;\nconst BEGIN_HEIGHT = 64;\nconst END_LATITUDE = 66;\nconst END_LONGITUDE = 68;\nconst END_HEIGHT = 70;\nconst DURATION = 72;\nconst MAGNITUDE = 73;\nconst PEAK_HEIGHT = 74;\nconst MASS = 76;\nconst STATION_CODES = 82;\n\nconst NUM_COLUMNS = 83;\n\nasync function fetchMeteorData(url: string): Promise<MeteorData[]> {\n  const meteors: MeteorData[] = [];\n  let nextIndex = 0;\n  for await (let line of fetchline(url)) {\n    if (line.length === 0) continue;\n    if (line[0] === \"\\r\") line = line.slice(1); // fetchline bug?\n    if (line[0] === \"#\") continue; // comment, probably column headers\n\n    const fields = line.split(\";\");\n    if (fields.length !== NUM_COLUMNS) continue;\n\n    const s = (i: number): string => {\n      const f = fields[i];\n      return f ? f.trim() : \"\";\n    };\n\n    const f = (i: number): number => {\n      return parseFloat(s(i));\n    };\n\n    const beginTime = s(BEGIN_UTC_TIME);\n    const showerCode = s(IAU_CODE);\n    const begin = {\n      latitude: f(BEGIN_LATITUDE),\n      longitude: f(BEGIN_LONGITUDE),\n      height: f(BEGIN_HEIGHT),\n    };\n    const end = {\n      latitude: f(END_LATITUDE),\n      longitude: f(END_LONGITUDE),\n      height: f(END_HEIGHT),\n    };\n    const averageSpeed = f(AVERAGE_SPEED);\n    const duration = f(DURATION);\n    const magnitude = f(MAGNITUDE);\n    const peakHeight = f(PEAK_HEIGHT);\n    const mass = f(MASS);\n    const stationCodes = s(STATION_CODES).split(\",\");\n\n    const shower = getShower(showerCode);\n    meteors.push({\n      index: nextIndex++,\n      beginTime,\n      shower,\n      begin,\n      end,\n      peakHeight,\n      magnitude,\n      duration,\n      mass,\n      averageSpeed,\n      stationCodes,\n    });\n  }\n\n  return meteors;\n}\n\nexport function filterMeteors(\n  filter: FilterData,\n  meteors: MeteorData[]\n): boolean[] {\n  return meteors.map((m) => {\n    const { shower, magnitude } = m;\n\n    // by shower\n    if (!filter.showers.includes(shower)) return false;\n\n    // by magnitude\n    const { min, max } = filter.magnitude;\n    if (min !== undefined && magnitude < min) return false;\n    if (max !== undefined && magnitude > max) return false;\n\n    return true;\n  });\n}\n","import { Menu, MenuItem } from \"@mui/material\";\n\nimport { MeteorDataInfo } from \"../interfaces\";\nimport { METEORS_YESTERDAY, METEORS_LATEST_DAILY } from \"../data/meteors\";\n\ninterface Props {\n  anchorEl: HTMLElement | null;\n  open: boolean;\n  onClose: () => void;\n  onLoadMeteors: (info: MeteorDataInfo) => void;\n  showLoadDailyDialog: () => void;\n}\n\nexport function LoadMeteorsMenu(props: Props) {\n  const { anchorEl, open, onClose, onLoadMeteors, showLoadDailyDialog } = props;\n\n  return (\n    <Menu open={open} onClose={onClose} anchorEl={anchorEl}>\n      <MenuItem\n        onClick={() => {\n          onLoadMeteors(METEORS_YESTERDAY);\n        }}\n      >\n        {METEORS_YESTERDAY.title}\n      </MenuItem>\n      <MenuItem\n        onClick={() => {\n          onLoadMeteors(METEORS_LATEST_DAILY);\n        }}\n      >\n        {METEORS_LATEST_DAILY.title}\n      </MenuItem>\n      <MenuItem onClick={showLoadDailyDialog}>Daily...</MenuItem>\n    </Menu>\n  );\n}\n","import { DateTime } from \"luxon\";\n// import { base, julian, solar } from \"astronomia\";\nimport { MeteorDataInfo } from \"../interfaces\";\n\nconst URL_BASE = \"https://globalmeteornetwork.org/data/traj_summary_data/\";\n\n// const GMN_EARLIEST_DATE = DateTime.fromISO(\"2020-09-18\").toJSDate();\n\nconst DAILY_URL_REGEX =\n  /<a href=\"(?<filename>traj_summary_(?<date>\\d{8})_solrange_(?<solarLongitudeFrom>\\d{3}.\\d)-(?<solarLongitudeTo>\\d{3}.\\d).txt)\">/g;\n\nexport class GMN {\n  url(filename: string) {\n    return URL_BASE + filename;\n  }\n\n  dailyMeteorsUrl(date: DateTime) {\n    // const jde = julian.DateToJDE(date.toJSDate());\n    // const c = base.J2000Century(jde);\n    // const { lon } = solar.true2000(c);\n    // const l = Math.ceil((180 * lon) / Math.PI);\n    // const d = date.toFormat(\"yyyyMMdd\");\n    // const f = `daily/traj_summary_${d}_solrange_${l}.0-${l + 1}.0.txt`;\n    // console.info(date, jde, c, lon);\n    // console.info(d, l, f);\n\n    const d = date.toFormat(\"yyyyMMdd\");\n    const f = this._dailyFileNamesByDate.get(d);\n    if (f) return this.url(`daily/${f}`);\n    throw Error(`No daily data available for ${date}`);\n  }\n\n  dailyMeteorsInfo(date: DateTime): MeteorDataInfo {\n    return {\n      title: \"Daily \" + date.toLocaleString(DateTime.DATE_FULL),\n      url: this.dailyMeteorsUrl(date),\n    };\n  }\n\n  private _dailyFileNamesByDate = new Map<string, string>();\n  private _dailyInitialized = false;\n\n  get dailyInitialized() {\n    return this._dailyInitialized;\n  }\n\n  async initDailyMeteorsAvailable() {\n    if (!this._dailyInitialized) {\n      try {\n        const r = await fetch(URL_BASE + \"daily/\");\n        if (r.ok) {\n          const s = await r.text();\n          const ms = s.matchAll(DAILY_URL_REGEX);\n          for (const m of ms) {\n            if (m.groups) {\n              const date = m.groups[\"date\"];\n              const filename = m.groups[\"filename\"];\n              console.info(date, filename);\n              this._dailyFileNamesByDate.set(date, filename);\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this._dailyInitialized = true;\n      }\n    }\n  }\n\n  dailyMeteorsAvailable(date: DateTime): boolean {\n    const d = date.toFormat(\"yyyyMMdd\");\n    return this._dailyFileNamesByDate.has(d);\n  }\n}\n","import { createContext, useContext } from \"react\";\nimport useConstant from \"use-constant\";\n\nimport { GMN } from \"./data/GMN\";\n\nexport interface GMNContext {\n  gmn: GMN;\n}\n\nconst Context = createContext<GMNContext | null>(null);\n\nexport function GMNProvider({ children }) {\n  const gmn = useConstant(() => new GMN());\n\n  const contextValue = { gmn };\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n\nexport function useGMN(): GMNContext {\n  const c = useContext(Context);\n  if (c) return c;\n  throw Error(\"useGMN used outside GMNProvider\");\n}\n","import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Skeleton,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/lab\";\nimport { DateTime } from \"luxon\";\nimport useAsyncEffect from \"use-async-effect\";\n\nimport { useGMN } from \"../GMNProvider\";\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n  onLoadMeteors: (date: DateTime) => void;\n}\n\nexport function LoadDailyMeteorsDialog(props: Props) {\n  const { open, onClose, onLoadMeteors } = props;\n\n  const { gmn } = useGMN();\n  const [availablityInitialized, setAvailablityInitialized] = useState(\n    gmn.dailyInitialized\n  );\n  useAsyncEffect(async () => {\n    if (open && !availablityInitialized) {\n      await gmn.initDailyMeteorsAvailable();\n      setAvailablityInitialized(true);\n    }\n  });\n\n  const [date, setDate] = useState<DateTime | null>(null);\n  // const today = DateTime.now();\n\n  const DailyMeteorsDatePicker = () => {\n    return (\n      <DatePicker\n        label=\"dd/mm/yyyy\"\n        value={date}\n        onChange={setDate}\n        renderInput={(params) => <TextField {...params} />}\n        inputFormat=\"dd/MM/yyyy\"\n        shouldDisableDate={(date) =>\n          date > DateTime.now() || !gmn.dailyMeteorsAvailable(date)\n        }\n      />\n    );\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Load Daily Meteors</DialogTitle>\n      <DialogContent>\n        {!availablityInitialized && (\n          <Skeleton>\n            <DailyMeteorsDatePicker />\n          </Skeleton>\n        )}\n        {availablityInitialized && <DailyMeteorsDatePicker />}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={date === null}\n          onClick={() => {\n            console.info(date);\n            if (date) onLoadMeteors(date);\n          }}\n        >\n          Load\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import parse from \"csv-parse/lib/sync\";\nimport { Degrees } from \"../interfaces\";\nimport { store } from \"../store\";\n\nexport interface CameraData {\n  identifier: string;\n  latitude: Degrees;\n  longitude: Degrees;\n}\n\nexport async function loadCameras(url: string): Promise<CameraData[]> {\n  const response = await fetch(url);\n  if (response.ok) {\n    const csv = await response.text();\n    // console.info(\"cameras csv\", csv);\n\n    const records = parse(csv, { columns: true });\n    return records.map((r: any) => ({\n      identifier: r.camera_id,\n      latitude: r.obs_latitude,\n      longitude: r.obs_longitude,\n    }));\n  } else return Promise.reject(response.statusText);\n}\n\nexport function initCameras() {\n  loadCameras(\"/meteor-globe/data/cameradetails.csv\")\n    .then((cameras) => {\n      // console.info(\"[cameras]\", cameras);\n      store.update((s) => {\n        const m = s.markers;\n        for (const c of cameras) {\n          m.set(c.identifier, { ...c, label: c.identifier });\n        }\n      });\n    })\n    .catch((e) => {\n      console.error(\"[cameras] load failed\", e);\n    });\n}\n","import {\n  Box,\n  Button,\n  InputLabel,\n  Select,\n  SelectChangeEvent,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { ActiveShowerData } from \"../../interfaces\";\nimport { store } from \"../../store\";\nimport { formatter } from \"../../App\";\n\nexport function ShowerFilter() {\n  const activeShowers = store.useState((s) => s.activeShowers);\n  const filterShowers = store.useState((s) => s.filter.showers);\n\n  return (\n    <>\n      <InputLabel id=\"showers-label\">Showers</InputLabel>\n      <Select\n        labelId=\"showers-label\"\n        multiple\n        value={activeShowers.filter((s) => filterShowers.includes(s.shower))}\n        input={<OutlinedInput label=\"Showers\" />}\n        renderValue={(selected) => {\n          if (selected.length === 0) return \"(none)\";\n          const ss = [...selected];\n          const names = ss.map((s) => s.shower.name);\n          return names.join(\", \");\n        }}\n        onChange={(event: SelectChangeEvent<ActiveShowerData[]>) => {\n          const { value } = event.target;\n          if (typeof value === \"string\") return;\n          store.update((s) => {\n            s.filter.showers = value.map((s) => s.shower);\n          });\n        }}\n        MenuProps={MenuProps}\n      >\n        {activeShowers.map((s) => (\n          <MenuItem key={s.shower.code} value={s as any}>\n            <Checkbox checked={filterShowers.includes(s.shower)} />\n            <ListItemText>\n              {s.shower.name}\n              {\" (\"}\n              {formatter.format(s.meteors.length)}\n              {\")\"}\n            </ListItemText>\n          </MenuItem>\n        ))}\n      </Select>\n      <Box sx={{ display: \"flex\", flexFlow: \"row\" }}>\n        <Button\n          onClick={() => {\n            store.update((s) => {\n              s.filter.showers = activeShowers.map((s) => s.shower);\n            });\n          }}\n        >\n          all\n        </Button>\n        <Button\n          onClick={() => {\n            store.update((s) => {\n              s.filter.showers = [];\n            });\n          }}\n        >\n          none\n        </Button>\n      </Box>\n    </>\n  );\n}\n\nconst ITEM_HEIGHT = 54;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  autoFocus: false, // kludge to stop initial scoll to end\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\n      width: 280,\n    },\n  },\n};\n","import { MarkerProps } from \"./3d/Marker\";\n\nexport type Radians = number;\nexport type Degrees = number;\nexport type UTCTime = string;\nexport type ShowerCode = string;\nexport type Seconds = number;\nexport type Magnitude = number;\nexport type Kg = number;\nexport type StationCode = string;\nexport type Km = number;\nexport type Kms = number; // km/s\n\nexport type XYZ = [number, number, number];\n\nexport type LatLongHt = {\n  latitude: Degrees;\n  longitude: Degrees;\n  height: Km;\n};\n\nexport interface MeteorDataInfo {\n  url: string;\n  title: string;\n}\n\nexport interface MeteorData {\n  index: number;\n  beginTime: UTCTime;\n  shower: ShowerData;\n  begin: LatLongHt;\n  end: LatLongHt;\n  peakHeight: Km;\n  magnitude: Magnitude;\n  duration: Seconds;\n  mass: Kg;\n  averageSpeed: Kms;\n  stationCodes: StationCode[];\n}\n\nexport interface ShowerData {\n  code: string;\n  name: string;\n}\n\nexport interface FilterData {\n  showers: ShowerData[];\n  magnitude: {\n    min?: Magnitude;\n    max?: Magnitude;\n  };\n}\n\nexport interface ActiveShowerData {\n  shower: ShowerData;\n  meteors: MeteorData[];\n}\n\nexport interface AppState {\n  highlightedMarker: string;\n  markers: Map<string, MarkerProps>;\n  loading: boolean;\n  meteorDataInfo: MeteorDataInfo;\n  meteors: MeteorData[];\n  selectedMeteor: MeteorData | undefined;\n  activeShowers: ActiveShowerData[];\n  filter: FilterData;\n}\n\nexport const MIN_MAGNITUDE = -10;\nexport const MAX_MAGNITUDE = 10;\n","import { Box, Slider } from \"@mui/material\";\n\nimport { Magnitude, MIN_MAGNITUDE, MAX_MAGNITUDE } from \"../../interfaces\";\nimport { store } from \"../../store\";\n\nexport function MagnitudeFilter() {\n  const { min = MIN_MAGNITUDE, max = MAX_MAGNITUDE } = store.useState(\n    (s) => s.filter.magnitude\n  );\n\n  return (\n    <Box sx={{ my: \"16px\", px: \"24px\" }}>\n      <Slider\n        min={MIN_MAGNITUDE}\n        max={MAX_MAGNITUDE}\n        value={[min, max]}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        marks={[\n          {\n            value: MIN_MAGNITUDE,\n            label: `< ${MIN_MAGNITUDE}`,\n          },\n          {\n            value: 0,\n            label: \"Magnitude\",\n          },\n          {\n            value: MAX_MAGNITUDE,\n            label: `> ${MAX_MAGNITUDE}`,\n          },\n        ]}\n        onChange={(event, value, index) => {\n          store.update((s) => {\n            if (typeof value === \"number\") {\n              if (index === 0)\n                s.filter.magnitude.min = valueUnless(MIN_MAGNITUDE, value);\n              else s.filter.magnitude.max = valueUnless(MAX_MAGNITUDE, value);\n            } else {\n              s.filter.magnitude.min = valueUnless(MIN_MAGNITUDE, value[0]);\n              s.filter.magnitude.max = valueUnless(MAX_MAGNITUDE, value[1]);\n            }\n          });\n        }}\n      />\n    </Box>\n  );\n}\n\nfunction valueUnless(\n  unless: Magnitude,\n  value: Magnitude\n): Magnitude | undefined {\n  return value === unless ? undefined : value;\n}\n","import {\n  Box,\n  Typography,\n  Toolbar,\n  IconButton,\n  FormControl,\n} from \"@mui/material\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\n\nimport { ShowerFilter } from \"./filter/ShowerFilter\";\nimport { MagnitudeFilter } from \"./filter/MagnitudeFilter\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nexport function Filter(props: Props) {\n  const { onClose } = props;\n\n  return (\n    <Box sx={{ width: 300 }}>\n      <Toolbar sx={{ justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\">Filter</Typography>\n        <IconButton onClick={onClose}>\n          <ChevronRightRoundedIcon />\n        </IconButton>\n      </Toolbar>\n      <FormControl sx={{ m: 1, width: 280 }}>\n        <ShowerFilter />\n        <MagnitudeFilter />\n      </FormControl>\n    </Box>\n  );\n}\n","import { useEffect, useState, useCallback } from \"react\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  Link,\n  IconButton,\n  Alert,\n  Snackbar,\n  Drawer,\n} from \"@mui/material\";\n\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\n\nimport { LocalizationProvider } from \"@mui/lab\";\nimport DateAdapter from \"@mui/lab/AdapterLuxon\";\n\nimport Div100vh from \"react-div-100vh\";\nimport { Settings as LuxonSettings } from \"luxon\";\n\nimport { Globe } from \"./3d/Globe\";\nimport { MeteorInfo } from \"./ui/MeteorInfo\";\nimport { LoadMeteorsMenu } from \"./ui/LoadMeteorsMenu\";\nimport { LoadDailyMeteorsDialog } from \"./ui/LoadDailyMeteorsDialog\";\n\nimport \"./App.css\";\n\nimport { store } from \"./store\";\nimport { initCameras } from \"./data/cameras\";\nimport {\n  meteorDataInfoFromParams,\n  loadMeteors,\n  filterMeteors,\n} from \"./data/meteors\";\nimport { MeteorDataInfo, MeteorData } from \"./interfaces\";\nimport { useGMN } from \"./GMNProvider\";\nimport { Filter } from \"./ui/Filter\";\n\nLuxonSettings.defaultZone = \"Europe/London\";\n\nconst queryParams = new URLSearchParams(window.location.search);\nexport const formatter = new Intl.NumberFormat();\n\nexport default function App() {\n  const [error, setError] = useState<string | undefined>();\n  const markers = store.useState((s) => s.markers);\n  const meteors = store.useState((s) => s.meteors);\n  const selectedMeteor = store.useState((s) => s.selectedMeteor);\n  const filter = store.useState((s) => s.filter);\n\n  useEffect(initCameras, []);\n\n  const { gmn } = useGMN();\n\n  const tryLoadMeteors = useCallback((info: MeteorDataInfo) => {\n    loadMeteors(info).catch((e) => {\n      console.error(\"loading\", info, e);\n      setError(`Failed to load ${info.title}`);\n    });\n  }, []);\n\n  useEffect(() => {\n    tryLoadMeteors(meteorDataInfoFromParams(queryParams));\n  }, [tryLoadMeteors]);\n\n  const [filterVisible, setFilterVisible] = useState(false);\n\n  const Header = () => {\n    const loading = store.useState((s) => s.loading);\n    const title = store.useState((s) => s.meteorDataInfo.title);\n    const numMeteors = store.useState((s) => s.meteors.length);\n    const [menuVisible, setMenuVisible] = useState(false);\n    const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement | null>(null);\n    const [loadDailyMeteorsDialogOpen, setLoadDailyMeteorsDialogOpen] =\n      useState(false);\n\n    return (\n      <>\n        <AppBar color=\"transparent\" sx={{ boxShadow: \"none\" }}>\n          <Toolbar sx={{ justifyContent: \"space-between\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                flexGrow: 1,\n              }}\n            >\n              <IconButton\n                onClick={(event) => {\n                  setMenuVisible(!menuVisible);\n                  setMenuAnchorEl(event.currentTarget);\n                }}\n              >\n                <MenuRoundedIcon />\n              </IconButton>\n              <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n                {loading && `Loading ${title}...`}\n                {!loading && title}\n                {numMeteors === 1 && ` — 1 meteor`}\n                {numMeteors > 1 && ` — ${formatter.format(numMeteors)} meteors`}\n              </Typography>\n            </Box>\n            <IconButton\n              onClick={(event) => {\n                setFilterVisible(!filterVisible);\n              }}\n            >\n              <SearchRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <LoadMeteorsMenu\n          open={menuVisible}\n          onClose={() => setMenuVisible(false)}\n          anchorEl={menuAnchorEl}\n          onLoadMeteors={(info: MeteorDataInfo) => {\n            tryLoadMeteors(info);\n            setMenuVisible(false);\n          }}\n          showLoadDailyDialog={() => {\n            setLoadDailyMeteorsDialogOpen(true);\n            setMenuVisible(false);\n          }}\n        />\n        <LoadDailyMeteorsDialog\n          open={loadDailyMeteorsDialogOpen}\n          onClose={() => setLoadDailyMeteorsDialogOpen(false)}\n          onLoadMeteors={(date) => {\n            const info = gmn.dailyMeteorsInfo(date);\n            console.info(info);\n            tryLoadMeteors(info);\n            setLoadDailyMeteorsDialogOpen(false);\n          }}\n        />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <Snackbar open={error !== undefined}>\n          <Alert severity=\"error\" onClose={() => setError(undefined)}>\n            {error}\n          </Alert>\n        </Snackbar>\n        <Div100vh style={{ display: \"flex\", flexFlow: \"column\" }}>\n          <Header />\n          <Box sx={{ flex: \"1 1 auto\" }}>\n            <Globe\n              markers={[...markers.values()]}\n              meteors={meteors}\n              filteredMeteors={filterMeteors(filter, meteors)}\n              selectedMeteor={selectedMeteor}\n              selectMeteor={(m: MeteorData) => {\n                console.info(\"SELECT\", m);\n                store.update((s) => {\n                  s.selectedMeteor = m;\n                });\n              }}\n            />\n            {selectedMeteor && <MeteorInfo meteor={selectedMeteor} />}\n          </Box>\n          <Footer />\n          <Drawer\n            anchor=\"right\"\n            open={filterVisible}\n            onClose={() => {\n              setFilterVisible(false);\n            }}\n            variant=\"persistent\"\n          >\n            <Filter\n              onClose={() => {\n                setFilterVisible(false);\n              }}\n            />\n          </Drawer>\n        </Div100vh>\n      </LocalizationProvider>\n    </>\n  );\n}\n\nfunction Footer() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}{\" \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://github.com/robagar/meteor-globe\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Rob Agar\n      </Link>\n      {\" (UK003C) \"}\n      {\" — \"}\n      {\"Meteor data from the \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://globalmeteornetwork.org/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Global Meteor Network\n      </Link>\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport \"@fontsource/roboto\";\n\nimport theme from \"./theme\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { GMNProvider } from \"./GMNProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <React.Suspense fallback={<div>Loading... </div>}>\n        <GMNProvider>\n          <App />\n        </GMNProvider>\n      </React.Suspense>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}