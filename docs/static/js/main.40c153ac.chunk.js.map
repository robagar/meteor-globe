{"version":3,"sources":["theme.ts","geometry.ts","MeteorTooltip.tsx","InstancedMeteors.tsx","Globe.tsx","MeteorInfo.tsx","store.ts","cameras.ts","meteors.ts","App.tsx","index.tsx"],"names":["theme","createTheme","palette","mode","EARTH_RADIUS","radians","degrees","Math","PI","position","latitude","longitude","altitude","lat","long","r","cos","sin","xyz","point","height","MeteorTooltip","props","meteor","showerCode","beginTime","magnitude","duration","stationCodes","className","join","DEFAULT_COLOR","Color","HIGHLIGHTED_COLOR","SELECTED_COLOR","InstancedMeteors","data","selectedMeteor","selectMeteor","ref","useRef","useFrame","camera","mesh","current","i","index","setMatrixAt","buildMeteorMatrix","color","hoverInstanceIdRef","setColorAt","instanceMatrix","needsUpdate","instanceColor","useState","undefined","hover","setHover","invalidate","useThree","length","args","onClick","e","instanceId","onPointerOver","onPointerOut","vertexShader","fragmentShader","transparent","depthWrite","Html","calculatePosition","el","size","getIndex","parent","InstancedMesh","getMatrixAt","m","objectPos","v1","setFromMatrixPosition","project","widthHalf","width","heightHalf","x","y","calculateTooltipPosition","Vector3","Matrix4","cameraPosition","begin","end","brightness","tail","head","tx","ty","tz","center","cx","cy","cz","vector","max","direction","clone","normalize","view","sub","perp","cross","up","right","rotation","xAxis","yAxis","zAxis","makeBasis","quaternion","Quaternion","setFromRotationMatrix","scale","compose","Globe","meteors","fov","near","far","material","useTexture","map","bumpMap","specularMap","frameloop","OrbitControls","minDistance","maxDistance","zoomSpeed","rotateSpeed","intensity","MeteorInfo","enableMapSet","store","Store","highlightedMarker","markers","Map","identifier","label","meteorDataInfo","url","title","a","fetch","response","ok","text","csv","records","parse","columns","camera_id","obs_latitude","obs_longitude","Promise","reject","statusText","initCameras","loadCameras","then","cameras","console","info","update","s","c","set","catch","error","initMeteors","params","test","get","async","nextIndex","line","slice","fields","split","f","trim","parseFloat","averageSpeed","peakHeight","mass","push","fetchline","fetchMeteorData","formatter","Intl","NumberFormat","Header","numMeteors","AppBar","sx","boxShadow","Toolbar","Typography","variant","component","flexGrow","format","Footer","align","Date","getFullYear","Link","href","target","rel","App","queryParams","URLSearchParams","window","location","search","useEffect","style","display","flexFlow","Box","flex","values","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","Suspense","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.40c153ac.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport default theme;\n","export const EARTH_RADIUS: Km = 6371.37;\n\nexport type Radians = number;\nexport type Degrees = number;\nexport type Km = number;\n\nexport type LatLongHt = {\n  latitude: Degrees;\n  longitude: Degrees;\n  height: Km;\n};\n\nexport function radians(degrees: Degrees): Radians {\n  return (Math.PI * degrees) / 180;\n}\n\nexport type XYZ = [number, number, number];\n\nexport function position(\n  latitude: Degrees,\n  longitude: Degrees,\n  altitude: Km\n): XYZ {\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = altitude + EARTH_RADIUS;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n\nexport function xyz(point: LatLongHt): XYZ {\n  const { latitude, longitude, height } = point;\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = EARTH_RADIUS + height;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n","import { MeteorData } from \"./meteors\";\nimport \"./MeteorTooltip.css\";\n\nexport interface MeteorTooltipProps {\n  meteor: MeteorData;\n}\n\nexport function MeteorTooltip(props: MeteorTooltipProps) {\n  const { meteor } = props;\n  const { showerCode, beginTime, magnitude, duration, stationCodes } = meteor;\n\n  return (\n    <div className=\"root\">\n      <div className=\"shower\">{showerCode}</div>\n      <div className=\"beginTime\">{beginTime}</div>\n      <div className=\"magnitude\">Mag {magnitude}</div>\n      <div className=\"duration\">{duration}s</div>\n\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </div>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport {\n  Matrix4,\n  Vector3,\n  Quaternion,\n  InstancedMesh,\n  Color,\n  Object3D,\n  Camera,\n} from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { Html } from \"@react-three/drei\";\n\nimport { xyz, XYZ } from \"./geometry\";\nimport { MeteorData } from \"./meteors\";\nimport { MeteorTooltip } from \"./MeteorTooltip\";\n\nconst MIN_WIDTH = 0.1;\nconst MAG_ZERO_WIDTH = 2;\n\nconst DEFAULT_COLOR = new Color(\"white\");\nconst HIGHLIGHTED_COLOR = new Color(\"goldenrod\");\nconst SELECTED_COLOR = new Color(\"hotpink\");\n\nexport interface InstancedMeteorsProps {\n  data: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData) => void;\n}\n\nexport function InstancedMeteors(props: InstancedMeteorsProps) {\n  const { data, selectedMeteor, selectMeteor } = props;\n\n  const vertexShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      vUv = uv;\n      vColor = instanceColor;\n      gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position,1.0);\n    }\n  `;\n\n  const fragmentShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      float x = vUv.x;\n      float y = vUv.y;\n      float c = (x < 0.5 ? x : (1.0 - x)) * 2.0;\n      float p = 0.75;\n      float l = y < p ? (y / p) : (1.0 - y) / (1.0 - p);\n      float opacity = c * l;\n      gl_FragColor = vec4(vColor, opacity);\n    }\n  `;\n\n  const ref = useRef<InstancedMesh>();\n  useFrame(({ camera }) => {\n    // console.info(\"frame!\", data.length);\n    const mesh = ref.current;\n    if (mesh) {\n      for (const meteor of data) {\n        const i = meteor.index;\n        mesh.setMatrixAt(i, buildMeteorMatrix(meteor, camera.position));\n        let color = DEFAULT_COLOR;\n        if (meteor === selectedMeteor) color = SELECTED_COLOR;\n        else if (i === hoverInstanceIdRef.current) color = HIGHLIGHTED_COLOR;\n        mesh.setColorAt(i, color);\n      }\n      mesh.instanceMatrix.needsUpdate = true;\n      if (mesh.instanceColor) mesh.instanceColor.needsUpdate = true;\n    }\n  });\n\n  const [hover, setHover] = useState<MeteorData | undefined>(undefined);\n  const hoverInstanceIdRef = useRef<number | undefined>();\n\n  const { invalidate } = useThree();\n\n  return (\n    <>\n      {data.length && (\n        <instancedMesh\n          ref={ref}\n          args={[undefined, undefined, data.length]}\n          onClick={(e) => {\n            const i = e.instanceId;\n            if (i !== undefined) {\n              selectMeteor(data[i]);\n              invalidate();\n            }\n          }}\n          onPointerOver={(e) => {\n            const i = e.instanceId;\n            if (i !== undefined) {\n              setHover(data[i]);\n              if (hoverInstanceIdRef.current !== i) {\n                hoverInstanceIdRef.current = i;\n              }\n            }\n          }}\n          onPointerOut={(e) => {\n            setHover(undefined);\n            if (hoverInstanceIdRef.current === e.instanceId) {\n              hoverInstanceIdRef.current = undefined;\n            }\n          }}\n        >\n          <planeGeometry args={[1, 1]} />\n          <shaderMaterial\n            vertexShader={vertexShader}\n            fragmentShader={fragmentShader}\n            transparent={true}\n            depthWrite={false}\n          />\n\n          {hover && (\n            <Html\n              calculatePosition={(el, camera, size) =>\n                calculateTooltipPosition(\n                  el,\n                  camera,\n                  size,\n                  () => hoverInstanceIdRef.current\n                )\n              }\n            >\n              <MeteorTooltip meteor={hover} />\n            </Html>\n          )}\n        </instancedMesh>\n      )}\n    </>\n  );\n}\n\nconst v1 = new Vector3();\nconst m = new Matrix4();\nfunction calculateTooltipPosition(\n  el: Object3D,\n  camera: Camera,\n  size: { width: number; height: number },\n  getIndex: () => number | undefined\n) {\n  const index = getIndex();\n\n  if (el.parent instanceof InstancedMesh && index !== undefined) {\n    el.parent.getMatrixAt(index, m);\n  } else {\n    // hide tooltip offscreen\n    return [-9999999, -9999999];\n  }\n  const objectPos = v1.setFromMatrixPosition(m);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [\n    objectPos.x * widthHalf + widthHalf,\n    -(objectPos.y * heightHalf) + heightHalf,\n  ];\n}\n\nfunction buildMeteorMatrix(\n  meteor: MeteorData,\n  cameraPosition: Vector3\n): Matrix4 {\n  const { begin, end, magnitude } = meteor;\n\n  const brightness = 1 - magnitude * 0.2;\n\n  const tail = xyz(begin);\n  const head = xyz(end);\n\n  const [tx, ty, tz] = tail;\n  const [hx, hy, hz] = head;\n\n  const center: XYZ = [(tx + hx) / 2, (ty + hy) / 2, (tz + hz) / 2];\n  const [cx, cy, cz] = center;\n  const position = new Vector3(cx, cy, cz);\n\n  const vector = new Vector3(\n    head[0] - tail[0],\n    head[1] - tail[1],\n    head[2] - tail[2]\n  );\n  const length = vector.length();\n  const width = Math.max(MIN_WIDTH, MAG_ZERO_WIDTH * brightness);\n  const direction = vector.clone();\n  direction.normalize();\n\n  // build matrix\n\n  const view = position.clone().sub(cameraPosition).normalize();\n  const perp = direction.clone().cross(view).normalize();\n  const up = direction.clone().cross(perp).normalize();\n  const right = direction.clone().cross(up);\n\n  const rotation = new Matrix4();\n  const xAxis = right;\n  const yAxis = direction;\n  const zAxis = up;\n  rotation.makeBasis(xAxis, yAxis, zAxis);\n\n  const quaternion = new Quaternion();\n  quaternion.setFromRotationMatrix(rotation);\n\n  const scale = new Vector3(width, length, 1);\n\n  const m = new Matrix4();\n  m.compose(position, quaternion, scale);\n  return m;\n}\n","import { Canvas } from \"@react-three/fiber\";\nimport { useTexture, OrbitControls } from \"@react-three/drei\";\n\nimport { EARTH_RADIUS, position } from \"./geometry\";\n\nimport { /*Marker, */ MarkerProps } from \"./Marker\";\nimport { MeteorData } from \"./meteors\";\nimport { InstancedMeteors } from \"./InstancedMeteors\";\n\nimport \"./Globe.css\";\n\nexport interface GlobeProps {\n  markers: MarkerProps[];\n  meteors: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData) => void;\n}\n\nconst MIN_CAMERA_HEIGHT = 200;\nconst MAX_CAMERA_HEIGHT = 10000;\n\nexport function Globe(props: GlobeProps) {\n  const { /*markers,*/ meteors, selectedMeteor, selectMeteor } = props;\n\n  const camera = {\n    fov: 75,\n    near: 10,\n    far: 100000,\n    position: position(50.22, -4.95, 1500),\n  };\n  const material = useTexture({\n    map: \"/meteor-globe/textures/2_no_clouds_4k.jpeg\",\n    bumpMap: \"/meteor-globe/textures/elev_bump_4k.jpeg\",\n    specularMap: \"/meteor-globe/textures/water_4k.png\",\n  });\n  return (\n    <Canvas className=\"globeCanvas\" frameloop=\"demand\" camera={camera}>\n      <OrbitControls\n        minDistance={EARTH_RADIUS + MIN_CAMERA_HEIGHT}\n        maxDistance={EARTH_RADIUS + MAX_CAMERA_HEIGHT}\n        zoomSpeed={0.1}\n        rotateSpeed={0.1}\n      />\n      <ambientLight intensity={0.1} />\n      <directionalLight color=\"white\" position={position(0, 0, 1)} />\n      <mesh>\n        <sphereGeometry args={[EARTH_RADIUS, 128, 128]} />\n        <meshPhongMaterial {...material} />\n      </mesh>\n      {/*      {markers.map((m) => (\n        <Marker key={`marker-${m.identifier}`} {...m} />\n      ))}\n*/}\n      <InstancedMeteors\n        data={meteors}\n        selectedMeteor={selectedMeteor}\n        selectMeteor={selectMeteor}\n      />\n    </Canvas>\n  );\n}\n","import { MeteorData } from \"./meteors\";\nimport \"./MeteorInfo.css\";\n\nexport interface MeteorInfoProps {\n  meteor: MeteorData;\n}\n\nexport function MeteorInfo(props: MeteorInfoProps) {\n  const { meteor } = props;\n  const {\n    showerCode,\n    beginTime,\n    magnitude,\n    duration,\n    // averageSpeed,\n    stationCodes,\n  } = meteor;\n\n  return (\n    <div className=\"root\">\n      <div className=\"shower\">{showerCode}</div>\n      <div className=\"beginTime\">{beginTime}</div>\n      <div className=\"magnitude\">Mag {magnitude}</div>\n      <div className=\"duration\">{duration}s</div>\n      {/*<div className=\"averageSpeed\">{averageSpeed}kms⁻¹</div>*/}\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </div>\n  );\n}\n","import { Store } from \"pullstate\";\nimport { enableMapSet } from \"immer\";\n\nimport { MarkerProps } from \"./Marker\";\nimport { MeteorData, MeteorDataInfo } from \"./meteors\";\n\nenableMapSet();\n\nexport const store = new Store({\n  highlightedMarker: \"\",\n  markers: new Map<string, MarkerProps>([\n    [\n      \"UK003C\",\n      {\n        identifier: \"UK003C\",\n        latitude: 50.224871,\n        longitude: -4.949858,\n        label: \"UK003C\",\n      },\n    ],\n  ]),\n  meteorDataInfo: {\n    url: \"\",\n    title: \"Loading meteors...\",\n  } as MeteorDataInfo,\n  meteors: [] as MeteorData[],\n  selectedMeteor: undefined as MeteorData | undefined,\n});\n","import parse from \"csv-parse/lib/sync\";\nimport { Degrees } from \"./geometry\";\nimport { store } from \"./store\";\n\nexport interface CameraData {\n  identifier: string;\n  latitude: Degrees;\n  longitude: Degrees;\n}\n\nexport async function loadCameras(url: string): Promise<CameraData[]> {\n  const response = await fetch(url);\n  if (response.ok) {\n    const csv = await response.text();\n    // console.info(\"cameras csv\", csv);\n\n    const records = parse(csv, { columns: true });\n    return records.map((r: any) => ({\n      identifier: r.camera_id,\n      latitude: r.obs_latitude,\n      longitude: r.obs_longitude,\n    }));\n  } else return Promise.reject(response.statusText);\n}\n\nexport function initCameras() {\n  loadCameras(\"/meteor-globe/data/cameradetails.csv\")\n    .then((cameras) => {\n      console.info(\"[cameras]\", cameras);\n      store.update((s) => {\n        const m = s.markers;\n        for (const c of cameras) {\n          m.set(c.identifier, { ...c, label: c.identifier });\n        }\n      });\n    })\n    .catch((e) => {\n      console.error(\"[cameras] load failed\", e);\n    });\n}\n","import fetchline from \"fetchline\";\n\nimport { store } from \"./store\";\nimport { LatLongHt, Km } from \"./geometry\";\n\nexport const DEFAULT_COLOR = [1, 1, 1];\nexport const HIGHLIGHTED_COLOR = [1.0, 0.27, 0.71]; // CSS hotpink #FF69B4\n\nexport type UTCTime = string;\nexport type ShowerCode = string;\nexport type Seconds = number;\nexport type Magnitude = number;\nexport type Kg = number;\nexport type StationCode = string;\nexport type Kms = number;\n\nexport interface MeteorData {\n  index: number;\n  beginTime: UTCTime;\n  showerCode: ShowerCode;\n  begin: LatLongHt;\n  end: LatLongHt;\n  peakHeight: Km;\n  magnitude: Magnitude;\n  duration: Seconds;\n  mass: Kg;\n  averageSpeed: Kms;\n  stationCodes: StationCode[];\n}\n\nexport interface MeteorDataInfo {\n  url: string;\n  title: string;\n}\n\nfunction meteorDataInfo(params: URLSearchParams): MeteorDataInfo {\n  const test = params.get(\"test\");\n  if (test !== null) {\n    switch (test) {\n      case \"one_perseid\":\n        return {\n          url: \"/meteor-globe/data/one_perseid.txt\",\n          title: \"Test - One Perseid\",\n        };\n      default:\n        return {\n          url: \"/meteor-globe/data/traj_summary_20210812_solrange_140.0-141.0.txt\",\n          title: \"Test - Lots of Perseids\",\n        };\n    }\n  }\n\n  // default to all detected by GMN yesterday\n  return {\n    url: \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_yesterday.txt\",\n    title: \"Yesterday\",\n  };\n}\n\nexport function initMeteors(params: URLSearchParams) {\n  const info = meteorDataInfo(params);\n  fetchMeteorData(info.url)\n    .then((meteors) => {\n      store.update((s) => {\n        s.meteorDataInfo = info;\n        s.meteors = meteors;\n      });\n    })\n    .catch((e) => {\n      console.error(\"[meteors] fetch failed\", e);\n      throw e;\n    });\n}\n\n// column indices\nconst BEGIN_UTC_TIME = 1;\nconst IAU_CODE = 3;\nconst AVERAGE_SPEED = 58;\nconst BEGIN_LATITUDE = 60;\nconst BEGIN_LONGITUDE = 62;\nconst BEGIN_HEIGHT = 64;\nconst END_LATITUDE = 66;\nconst END_LONGITUDE = 68;\nconst END_HEIGHT = 70;\nconst DURATION = 72;\nconst MAGNITUDE = 73;\nconst PEAK_HEIGHT = 74;\nconst MASS = 76;\nconst STATION_CODES = 82;\n\nconst NUM_COLUMNS = 83;\n\nasync function fetchMeteorData(url: string): Promise<MeteorData[]> {\n  const meteors: MeteorData[] = [];\n  let nextIndex = 0;\n  for await (let line of fetchline(url)) {\n    if (line.length === 0) continue;\n    if (line[0] === \"\\r\") line = line.slice(1); // fetchline bug?\n    if (line[0] === \"#\") continue; // comment, probably column headers\n\n    const fields = line.split(\";\");\n    if (fields.length !== NUM_COLUMNS) continue;\n\n    const s = (i: number): string => {\n      const f = fields[i];\n      return f ? f.trim() : \"\";\n    };\n\n    const f = (i: number): number => {\n      return parseFloat(s(i));\n    };\n\n    const beginTime = s(BEGIN_UTC_TIME);\n    const showerCode = s(IAU_CODE);\n    const begin = {\n      latitude: f(BEGIN_LATITUDE),\n      longitude: f(BEGIN_LONGITUDE),\n      height: f(BEGIN_HEIGHT),\n    };\n    const end = {\n      latitude: f(END_LATITUDE),\n      longitude: f(END_LONGITUDE),\n      height: f(END_HEIGHT),\n    };\n    const averageSpeed = f(AVERAGE_SPEED);\n    const duration = f(DURATION);\n    const magnitude = f(MAGNITUDE);\n    const peakHeight = f(PEAK_HEIGHT);\n    const mass = f(MASS);\n    const stationCodes = s(STATION_CODES).split(\",\");\n\n    meteors.push({\n      index: nextIndex++,\n      beginTime,\n      showerCode,\n      begin,\n      end,\n      peakHeight,\n      magnitude,\n      duration,\n      mass,\n      averageSpeed,\n      stationCodes,\n    });\n  }\n\n  return meteors;\n}\n","import { useEffect } from \"react\";\n\nimport { AppBar, Toolbar, Typography, Box, Link } from \"@mui/material\";\nimport Div100vh from \"react-div-100vh\";\n\nimport { Globe } from \"./Globe\";\nimport { MeteorInfo } from \"./MeteorInfo\";\n\nimport \"./App.css\";\n\nimport { store } from \"./store\";\nimport { initCameras } from \"./cameras\";\nimport { initMeteors, MeteorData } from \"./meteors\";\n\nconst formatter = new Intl.NumberFormat();\n\nfunction Header() {\n  const title = store.useState((s) => s.meteorDataInfo.title);\n  const numMeteors = store.useState((s) => s.meteors.length);\n\n  return (\n    <AppBar color=\"transparent\" sx={{ boxShadow: \"none\" }}>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          {title}\n          {numMeteors === 1 && ` — 1 meteor`}\n          {numMeteors > 1 && ` — ${formatter.format(numMeteors)} meteors`}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction Footer() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}{\" \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://github.com/robagar/meteor-globe\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Rob Agar\n      </Link>\n      {\" (UK003C) \"}\n      {\" — \"}\n      {\"Meteor data from the \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://globalmeteornetwork.org/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Global Meteor Network\n      </Link>\n    </Typography>\n  );\n}\n\nexport default function App() {\n  const queryParams = new URLSearchParams(window.location.search);\n\n  const markers = store.useState((s) => s.markers);\n  const meteors = store.useState((s) => s.meteors);\n  const selectedMeteor = store.useState((s) => s.selectedMeteor);\n\n  useEffect(initCameras, []);\n  useEffect(() => initMeteors(queryParams));\n\n  return (\n    <Div100vh style={{ display: \"flex\", flexFlow: \"column\" }}>\n      <Header />\n      <Box sx={{ flex: \"1 1 auto\" }}>\n        <Globe\n          markers={[...markers.values()]}\n          meteors={meteors}\n          selectedMeteor={selectedMeteor}\n          selectMeteor={(m: MeteorData) => {\n            console.info(\"SELECT\", m);\n            store.update((s) => {\n              s.selectedMeteor = m;\n            });\n          }}\n        />\n        {selectedMeteor && <MeteorInfo meteor={selectedMeteor} />}\n      </Box>\n      <Footer />\n    </Div100vh>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport \"@fontsource/roboto\";\n\nimport theme from \"./theme\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <React.Suspense fallback={<div>Loading... </div>}>\n        <App />\n      </React.Suspense>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}