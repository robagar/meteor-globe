{"version":3,"sources":["theme.ts","3d/geometry.ts","ui/MeteorTooltip.tsx","3d/InstancedMeteors.tsx","3d/Globe.tsx","ui/MeteorInfo.tsx","store.ts","data/meteors.ts","ui/LoadMeteorsMenu.tsx","data/GMN.ts","GMNProvider.tsx","ui/LoadDailyMeteorsDialog.tsx","data/cameras.ts","App.tsx","index.tsx"],"names":["theme","createTheme","palette","mode","EARTH_RADIUS","radians","degrees","Math","PI","position","latitude","longitude","altitude","lat","long","r","cos","sin","xyz","point","height","MeteorTooltip","props","meteor","showerCode","beginTime","magnitude","duration","stationCodes","className","join","DEFAULT_COLOR","Color","HIGHLIGHTED_COLOR","SELECTED_COLOR","ZERO_MATRIX","Matrix4","InstancedMeteors","data","selectedMeteor","selectMeteor","ref","useRef","old","useFrame","camera","current","console","warn","mesh","i","index","setMatrixAt","buildMeteorMatrix","color","hoverInstanceIdRef","setColorAt","length","instanceMatrix","needsUpdate","instanceColor","useState","undefined","hover","setHover","invalidate","useThree","args","onClick","e","instanceId","onPointerOver","onPointerOut","vertexShader","fragmentShader","transparent","depthWrite","Html","calculatePosition","el","size","getIndex","parent","InstancedMesh","getMatrixAt","m","objectPos","v1","setFromMatrixPosition","project","widthHalf","width","heightHalf","x","y","calculateTooltipPosition","Vector3","cameraPosition","begin","end","brightness","tail","head","tx","ty","tz","center","cx","cy","cz","vector","max","direction","clone","normalize","view","sub","perp","cross","up","right","rotation","xAxis","yAxis","zAxis","makeBasis","quaternion","Quaternion","setFromRotationMatrix","scale","compose","Globe","meteors","fov","near","far","material","useTexture","map","bumpMap","specularMap","frameloop","OrbitControls","minDistance","maxDistance","zoomSpeed","rotateSpeed","intensity","MeteorInfo","enableMapSet","store","Store","highlightedMarker","markers","Map","identifier","label","loading","meteorDataInfo","url","title","METEORS_YESTERDAY","METEORS_LATEST_DAILY","info","a","update","s","fetchMeteorData","async","nextIndex","line","slice","fields","split","f","trim","parseFloat","averageSpeed","peakHeight","mass","push","fetchline","LoadMeteorsMenu","anchorEl","open","onClose","onLoadMeteors","showLoadDailyDialog","Menu","MenuItem","URL_BASE","DAILY_URL_REGEX","GMN","_dailyFileNamesByDate","_dailyInitialized","filename","date","d","toFormat","this","get","Error","toLocaleString","DateTime","DATE_FULL","dailyMeteorsUrl","fetch","ok","text","ms","matchAll","groups","set","error","has","Context","createContext","GMNProvider","children","contextValue","gmn","useConstant","Provider","value","useGMN","c","useContext","LoadDailyMeteorsDialog","dailyInitialized","availablityInitialized","setAvailablityInitialized","useAsyncEffect","initDailyMeteorsAvailable","setDate","DailyMeteorsDatePicker","DatePicker","onChange","renderInput","params","TextField","inputFormat","shouldDisableDate","now","dailyMeteorsAvailable","Dialog","DialogTitle","DialogContent","Skeleton","DialogActions","Button","disabled","response","csv","records","parse","columns","camera_id","obs_latitude","obs_longitude","Promise","reject","statusText","initCameras","loadCameras","then","cameras","catch","Settings","defaultZone","queryParams","URLSearchParams","window","location","search","formatter","Intl","NumberFormat","App","setError","useEffect","tryLoadMeteors","useCallback","loadMeteors","test","meteorDataInfoFromParams","Header","numMeteors","menuVisible","setMenuVisible","menuAnchorEl","setMenuAnchorEl","loadDailyMeteorsDialogOpen","setLoadDailyMeteorsDialogOpen","AppBar","sx","boxShadow","Toolbar","IconButton","event","currentTarget","Typography","variant","component","flexGrow","format","dailyMeteorsInfo","LocalizationProvider","dateAdapter","DateAdapter","Snackbar","Alert","severity","style","display","flexFlow","Box","flex","values","Footer","align","Date","getFullYear","Link","href","target","rel","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","Suspense","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.3203697a.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport default theme;\n","export const EARTH_RADIUS: Km = 6371.37;\n\nexport type Radians = number;\nexport type Degrees = number;\nexport type Km = number;\n\nexport type LatLongHt = {\n  latitude: Degrees;\n  longitude: Degrees;\n  height: Km;\n};\n\nexport function radians(degrees: Degrees): Radians {\n  return (Math.PI * degrees) / 180;\n}\n\nexport type XYZ = [number, number, number];\n\nexport function position(\n  latitude: Degrees,\n  longitude: Degrees,\n  altitude: Km\n): XYZ {\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = altitude + EARTH_RADIUS;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n\nexport function xyz(point: LatLongHt): XYZ {\n  const { latitude, longitude, height } = point;\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = EARTH_RADIUS + height;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n","import { MeteorData } from \"../data/meteors\";\nimport \"./MeteorTooltip.css\";\n\nexport interface MeteorTooltipProps {\n  meteor: MeteorData;\n}\n\nexport function MeteorTooltip(props: MeteorTooltipProps) {\n  const { meteor } = props;\n  const { showerCode, beginTime, magnitude, duration, stationCodes } = meteor;\n\n  return (\n    <div className=\"root\">\n      <div className=\"shower\">{showerCode}</div>\n      <div className=\"beginTime\">{beginTime}</div>\n      <div className=\"magnitude\">Mag {magnitude}</div>\n      <div className=\"duration\">{duration}s</div>\n\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </div>\n  );\n}\n","import { useRef, useState } from \"react\";\nimport {\n  Matrix4,\n  Vector3,\n  Quaternion,\n  InstancedMesh,\n  Color,\n  Object3D,\n  Camera,\n} from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { Html } from \"@react-three/drei\";\n\nimport { xyz, XYZ } from \"./geometry\";\nimport { MeteorData } from \"../data/meteors\";\nimport { MeteorTooltip } from \"../ui/MeteorTooltip\";\n\nconst MIN_WIDTH = 0.1;\nconst MAG_ZERO_WIDTH = 2;\n\nconst DEFAULT_COLOR = new Color(\"white\");\nconst HIGHLIGHTED_COLOR = new Color(\"goldenrod\");\nconst SELECTED_COLOR = new Color(\"hotpink\");\n\n// workaround for R3F bug - pointer events stop working if instanced mesh is reinstantiated\nconst MAX_METEORS = 10000;\n\nconst ZERO_MATRIX = new Matrix4();\n\nexport interface InstancedMeteorsProps {\n  data: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData) => void;\n}\n\nexport function InstancedMeteors(props: InstancedMeteorsProps) {\n  const { data, selectedMeteor, selectMeteor } = props;\n\n  const vertexShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      vUv = uv;\n      vColor = instanceColor;\n      gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position,1.0);\n    }\n  `;\n\n  const fragmentShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      float x = vUv.x;\n      float y = vUv.y;\n      float c = (x < 0.5 ? x : (1.0 - x)) * 2.0;\n      float p = 0.75;\n      float l = y < p ? (y / p) : (1.0 - y) / (1.0 - p);\n      float opacity = c * l;\n      gl_FragColor = vec4(vColor, opacity);\n    }\n  `;\n\n  const ref = useRef<InstancedMesh>();\n  const old = useRef<InstancedMesh>();\n\n  useFrame(({ camera }) => {\n    if (old.current !== ref.current) {\n      console.warn(\"new InstancedMesh\", ref.current);\n      old.current = ref.current;\n    }\n\n    // console.info(\"frame!\", data.length);\n    const mesh = ref.current;\n    if (mesh) {\n      for (const meteor of data) {\n        const i = meteor.index;\n        mesh.setMatrixAt(i, buildMeteorMatrix(meteor, camera.position));\n        let color = DEFAULT_COLOR;\n        if (meteor === selectedMeteor) color = SELECTED_COLOR;\n        else if (i === hoverInstanceIdRef.current) color = HIGHLIGHTED_COLOR;\n        mesh.setColorAt(i, color);\n      }\n\n      for (let i = data.length; i < MAX_METEORS; ++i) {\n        mesh.setMatrixAt(i, ZERO_MATRIX);\n      }\n\n      mesh.instanceMatrix.needsUpdate = true;\n      if (mesh.instanceColor) mesh.instanceColor.needsUpdate = true;\n    }\n  });\n\n  const [hover, setHover] = useState<MeteorData | undefined>(undefined);\n  const hoverInstanceIdRef = useRef<number | undefined>();\n\n  const { invalidate } = useThree();\n\n  return (\n    <>\n      {data.length && (\n        <instancedMesh\n          ref={ref}\n          args={[undefined, undefined, MAX_METEORS /*data.length*/]}\n          onClick={(e) => {\n            // console.info(\"onClick\", e.instanceId);\n            const i = e.instanceId;\n            if (i !== undefined) {\n              selectMeteor(data[i]);\n              invalidate();\n            }\n          }}\n          onPointerOver={(e) => {\n            // console.info(\"onPointerOver\", e.instanceId);\n            const i = e.instanceId;\n            if (i !== undefined) {\n              setHover(data[i]);\n              if (hoverInstanceIdRef.current !== i) {\n                hoverInstanceIdRef.current = i;\n              }\n            }\n          }}\n          onPointerOut={(e) => {\n            setHover(undefined);\n            if (hoverInstanceIdRef.current === e.instanceId) {\n              hoverInstanceIdRef.current = undefined;\n            }\n          }}\n        >\n          <planeGeometry args={[1, 1]} />\n          <shaderMaterial\n            vertexShader={vertexShader}\n            fragmentShader={fragmentShader}\n            transparent={true}\n            depthWrite={false}\n          />\n\n          {hover && (\n            <Html\n              calculatePosition={(el, camera, size) =>\n                calculateTooltipPosition(\n                  el,\n                  camera,\n                  size,\n                  () => hoverInstanceIdRef.current\n                )\n              }\n            >\n              <MeteorTooltip meteor={hover} />\n            </Html>\n          )}\n        </instancedMesh>\n      )}\n    </>\n  );\n}\n\nconst v1 = new Vector3();\nconst m = new Matrix4();\nfunction calculateTooltipPosition(\n  el: Object3D,\n  camera: Camera,\n  size: { width: number; height: number },\n  getIndex: () => number | undefined\n) {\n  const index = getIndex();\n\n  if (el.parent instanceof InstancedMesh && index !== undefined) {\n    el.parent.getMatrixAt(index, m);\n  } else {\n    // hide tooltip offscreen\n    return [-9999999, -9999999];\n  }\n  const objectPos = v1.setFromMatrixPosition(m);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [\n    objectPos.x * widthHalf + widthHalf,\n    -(objectPos.y * heightHalf) + heightHalf,\n  ];\n}\n\nfunction buildMeteorMatrix(\n  meteor: MeteorData,\n  cameraPosition: Vector3\n): Matrix4 {\n  const { begin, end, magnitude } = meteor;\n\n  const brightness = 1 - magnitude * 0.2;\n\n  const tail = xyz(begin);\n  const head = xyz(end);\n\n  const [tx, ty, tz] = tail;\n  const [hx, hy, hz] = head;\n\n  const center: XYZ = [(tx + hx) / 2, (ty + hy) / 2, (tz + hz) / 2];\n  const [cx, cy, cz] = center;\n  const position = new Vector3(cx, cy, cz);\n\n  const vector = new Vector3(\n    head[0] - tail[0],\n    head[1] - tail[1],\n    head[2] - tail[2]\n  );\n  const length = vector.length();\n  const width = Math.max(MIN_WIDTH, MAG_ZERO_WIDTH * brightness);\n  const direction = vector.clone();\n  direction.normalize();\n\n  // build matrix\n\n  const view = position.clone().sub(cameraPosition).normalize();\n  const perp = direction.clone().cross(view).normalize();\n  const up = direction.clone().cross(perp).normalize();\n  const right = direction.clone().cross(up);\n\n  const rotation = new Matrix4();\n  const xAxis = right;\n  const yAxis = direction;\n  const zAxis = up;\n  rotation.makeBasis(xAxis, yAxis, zAxis);\n\n  const quaternion = new Quaternion();\n  quaternion.setFromRotationMatrix(rotation);\n\n  const scale = new Vector3(width, length, 1);\n\n  const m = new Matrix4();\n  m.compose(position, quaternion, scale);\n  return m;\n}\n","import { Canvas } from \"@react-three/fiber\";\nimport { useTexture, OrbitControls } from \"@react-three/drei\";\n\nimport { EARTH_RADIUS, position } from \"./geometry\";\n\nimport { /*Marker, */ MarkerProps } from \"./Marker\";\nimport { MeteorData } from \"../data/meteors\";\nimport { InstancedMeteors } from \"./InstancedMeteors\";\n\nimport \"./Globe.css\";\n\nexport interface GlobeProps {\n  markers: MarkerProps[];\n  meteors: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData) => void;\n}\n\nconst MIN_CAMERA_HEIGHT = 200;\nconst MAX_CAMERA_HEIGHT = 10000;\n\nexport function Globe(props: GlobeProps) {\n  const { /*markers,*/ meteors, selectedMeteor, selectMeteor } = props;\n\n  const camera = {\n    fov: 75,\n    near: 10,\n    far: 100000,\n    position: position(50.22, -4.95, 1500),\n  };\n  const material = useTexture({\n    map: \"/meteor-globe/textures/2_no_clouds_4k.jpeg\",\n    bumpMap: \"/meteor-globe/textures/elev_bump_4k.jpeg\",\n    specularMap: \"/meteor-globe/textures/water_4k.png\",\n  });\n  return (\n    <Canvas className=\"globeCanvas\" frameloop=\"demand\" camera={camera}>\n      <OrbitControls\n        minDistance={EARTH_RADIUS + MIN_CAMERA_HEIGHT}\n        maxDistance={EARTH_RADIUS + MAX_CAMERA_HEIGHT}\n        zoomSpeed={0.1}\n        rotateSpeed={0.1}\n      />\n      <ambientLight intensity={0.1} />\n      <directionalLight color=\"white\" position={position(0, 0, 1)} />\n      <mesh>\n        <sphereGeometry args={[EARTH_RADIUS, 128, 128]} />\n        <meshPhongMaterial {...material} />\n      </mesh>\n      {/*      {markers.map((m) => (\n        <Marker key={`marker-${m.identifier}`} {...m} />\n      ))}\n*/}\n      <InstancedMeteors\n        data={meteors}\n        selectedMeteor={selectedMeteor}\n        selectMeteor={selectMeteor}\n      />\n    </Canvas>\n  );\n}\n","import { MeteorData } from \"../data/meteors\";\nimport \"./MeteorInfo.css\";\n\nexport interface MeteorInfoProps {\n  meteor: MeteorData;\n}\n\nexport function MeteorInfo(props: MeteorInfoProps) {\n  const { meteor } = props;\n  const {\n    showerCode,\n    beginTime,\n    magnitude,\n    duration,\n    // averageSpeed,\n    stationCodes,\n  } = meteor;\n\n  return (\n    <div className=\"root\">\n      <div className=\"shower\">{showerCode}</div>\n      <div className=\"beginTime\">{beginTime}</div>\n      <div className=\"magnitude\">Mag {magnitude}</div>\n      <div className=\"duration\">{duration}s</div>\n      {/*<div className=\"averageSpeed\">{averageSpeed}kms⁻¹</div>*/}\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </div>\n  );\n}\n","import { Store } from \"pullstate\";\nimport { enableMapSet } from \"immer\";\n\nimport { MarkerProps } from \"./3d/Marker\";\nimport { MeteorData, MeteorDataInfo } from \"./data/meteors\";\n\nenableMapSet();\n\nexport const store = new Store({\n  highlightedMarker: \"\",\n  markers: new Map<string, MarkerProps>([\n    [\n      \"UK003C\",\n      {\n        identifier: \"UK003C\",\n        latitude: 50.224871,\n        longitude: -4.949858,\n        label: \"UK003C\",\n      },\n    ],\n  ]),\n  loading: true,\n  meteorDataInfo: {\n    url: \"\",\n    title: \"\",\n  } as MeteorDataInfo,\n  meteors: [] as MeteorData[],\n  selectedMeteor: undefined as MeteorData | undefined,\n});\n","import fetchline from \"fetchline\";\n\nimport { store } from \"../store\";\nimport { LatLongHt, Km } from \"../3d/geometry\";\n\nexport const DEFAULT_COLOR = [1, 1, 1];\nexport const HIGHLIGHTED_COLOR = [1.0, 0.27, 0.71]; // CSS hotpink #FF69B4\n\nexport type UTCTime = string;\nexport type ShowerCode = string;\nexport type Seconds = number;\nexport type Magnitude = number;\nexport type Kg = number;\nexport type StationCode = string;\nexport type Kms = number;\n\nexport interface MeteorData {\n  index: number;\n  beginTime: UTCTime;\n  showerCode: ShowerCode;\n  begin: LatLongHt;\n  end: LatLongHt;\n  peakHeight: Km;\n  magnitude: Magnitude;\n  duration: Seconds;\n  mass: Kg;\n  averageSpeed: Kms;\n  stationCodes: StationCode[];\n}\n\nexport interface MeteorDataInfo {\n  url: string;\n  title: string;\n}\n\nexport const METEORS_YESTERDAY = {\n  url: \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_yesterday.txt\",\n  title: \"Yesterday\",\n};\n\nexport const METEORS_LATEST_DAILY = {\n  url: \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_latest_daily.txt\",\n  title: \"Latest Daily\",\n};\n\nexport function meteorDataInfoFromParams(\n  params: URLSearchParams\n): MeteorDataInfo {\n  const test = params.get(\"test\");\n  if (test !== null) {\n    switch (test) {\n      case \"one_perseid\":\n        return {\n          url: \"/meteor-globe/data/one_perseid.txt\",\n          title: \"Test - One Perseid\",\n        };\n      default:\n        return {\n          url: \"/meteor-globe/data/traj_summary_20210812_solrange_140.0-141.0.txt\",\n          title: \"Test - Lots of Perseids\",\n        };\n    }\n  }\n\n  // default to all detected by GMN yesterday\n  return METEORS_YESTERDAY;\n}\n\nexport async function loadMeteors(info: MeteorDataInfo) {\n  console.info(\"[meteors] LOAD\", info.title, info.url);\n\n  store.update((s) => {\n    s.meteorDataInfo = info;\n    s.loading = true;\n    s.selectedMeteor = undefined;\n    s.meteors = [];\n  });\n\n  try {\n    const meteors = await fetchMeteorData(info.url);\n    store.update((s) => {\n      s.loading = false;\n      s.meteors = meteors;\n    });\n  } finally {\n    store.update((s) => {\n      s.loading = false;\n    });\n  }\n}\n\n// column indices\nconst BEGIN_UTC_TIME = 1;\nconst IAU_CODE = 3;\nconst AVERAGE_SPEED = 58;\nconst BEGIN_LATITUDE = 60;\nconst BEGIN_LONGITUDE = 62;\nconst BEGIN_HEIGHT = 64;\nconst END_LATITUDE = 66;\nconst END_LONGITUDE = 68;\nconst END_HEIGHT = 70;\nconst DURATION = 72;\nconst MAGNITUDE = 73;\nconst PEAK_HEIGHT = 74;\nconst MASS = 76;\nconst STATION_CODES = 82;\n\nconst NUM_COLUMNS = 83;\n\nasync function fetchMeteorData(url: string): Promise<MeteorData[]> {\n  const meteors: MeteorData[] = [];\n  let nextIndex = 0;\n  for await (let line of fetchline(url)) {\n    if (line.length === 0) continue;\n    if (line[0] === \"\\r\") line = line.slice(1); // fetchline bug?\n    if (line[0] === \"#\") continue; // comment, probably column headers\n\n    const fields = line.split(\";\");\n    if (fields.length !== NUM_COLUMNS) continue;\n\n    const s = (i: number): string => {\n      const f = fields[i];\n      return f ? f.trim() : \"\";\n    };\n\n    const f = (i: number): number => {\n      return parseFloat(s(i));\n    };\n\n    const beginTime = s(BEGIN_UTC_TIME);\n    const showerCode = s(IAU_CODE);\n    const begin = {\n      latitude: f(BEGIN_LATITUDE),\n      longitude: f(BEGIN_LONGITUDE),\n      height: f(BEGIN_HEIGHT),\n    };\n    const end = {\n      latitude: f(END_LATITUDE),\n      longitude: f(END_LONGITUDE),\n      height: f(END_HEIGHT),\n    };\n    const averageSpeed = f(AVERAGE_SPEED);\n    const duration = f(DURATION);\n    const magnitude = f(MAGNITUDE);\n    const peakHeight = f(PEAK_HEIGHT);\n    const mass = f(MASS);\n    const stationCodes = s(STATION_CODES).split(\",\");\n\n    meteors.push({\n      index: nextIndex++,\n      beginTime,\n      showerCode,\n      begin,\n      end,\n      peakHeight,\n      magnitude,\n      duration,\n      mass,\n      averageSpeed,\n      stationCodes,\n    });\n  }\n\n  return meteors;\n}\n","import { Menu, MenuItem } from \"@mui/material\";\n\nimport {\n  MeteorDataInfo,\n  METEORS_YESTERDAY,\n  METEORS_LATEST_DAILY,\n} from \"../data/meteors\";\n\ninterface Props {\n  anchorEl: HTMLElement | null;\n  open: boolean;\n  onClose: () => void;\n  onLoadMeteors: (info: MeteorDataInfo) => void;\n  showLoadDailyDialog: () => void;\n}\n\nexport function LoadMeteorsMenu(props: Props) {\n  const { anchorEl, open, onClose, onLoadMeteors, showLoadDailyDialog } = props;\n\n  return (\n    <Menu open={open} onClose={onClose} anchorEl={anchorEl}>\n      <MenuItem\n        onClick={() => {\n          onLoadMeteors(METEORS_YESTERDAY);\n        }}\n      >\n        {METEORS_YESTERDAY.title}\n      </MenuItem>\n      <MenuItem\n        onClick={() => {\n          onLoadMeteors(METEORS_LATEST_DAILY);\n        }}\n      >\n        {METEORS_LATEST_DAILY.title}\n      </MenuItem>\n      <MenuItem onClick={showLoadDailyDialog}>Daily...</MenuItem>\n    </Menu>\n  );\n}\n","import { DateTime } from \"luxon\";\n// import { base, julian, solar } from \"astronomia\";\nimport { MeteorDataInfo } from \"./meteors\";\n\nconst URL_BASE = \"https://globalmeteornetwork.org/data/traj_summary_data/\";\n\n// const GMN_EARLIEST_DATE = DateTime.fromISO(\"2020-09-18\").toJSDate();\n\nconst DAILY_URL_REGEX =\n  /<a href=\"(?<filename>traj_summary_(?<date>\\d{8})_solrange_(?<solarLongitudeFrom>\\d{3}.\\d)-(?<solarLongitudeTo>\\d{3}.\\d).txt)\">/g;\n\nexport class GMN {\n  url(filename: string) {\n    return URL_BASE + filename;\n  }\n\n  dailyMeteorsUrl(date: DateTime) {\n    // const jde = julian.DateToJDE(date.toJSDate());\n    // const c = base.J2000Century(jde);\n    // const { lon } = solar.true2000(c);\n    // const l = Math.ceil((180 * lon) / Math.PI);\n    // const d = date.toFormat(\"yyyyMMdd\");\n    // const f = `daily/traj_summary_${d}_solrange_${l}.0-${l + 1}.0.txt`;\n    // console.info(date, jde, c, lon);\n    // console.info(d, l, f);\n\n    const d = date.toFormat(\"yyyyMMdd\");\n    const f = this._dailyFileNamesByDate.get(d);\n    if (f) return this.url(`daily/${f}`);\n    throw Error(`No daily data available for ${date}`);\n  }\n\n  dailyMeteorsInfo(date: DateTime): MeteorDataInfo {\n    return {\n      title: \"Daily \" + date.toLocaleString(DateTime.DATE_FULL),\n      url: this.dailyMeteorsUrl(date),\n    };\n  }\n\n  private _dailyFileNamesByDate = new Map<string, string>();\n  private _dailyInitialized = false;\n\n  get dailyInitialized() {\n    return this._dailyInitialized;\n  }\n\n  async initDailyMeteorsAvailable() {\n    if (!this._dailyInitialized) {\n      try {\n        const r = await fetch(URL_BASE + \"daily/\");\n        // console.info(r);\n        if (r.ok) {\n          const s = await r.text();\n          // console.info(s);\n          const ms = s.matchAll(DAILY_URL_REGEX);\n          for (const m of ms) {\n            if (m.groups) {\n              const date = m.groups[\"date\"];\n              const filename = m.groups[\"filename\"];\n              console.info(date, filename);\n              this._dailyFileNamesByDate.set(date, filename);\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this._dailyInitialized = true;\n      }\n    }\n  }\n\n  dailyMeteorsAvailable(date: DateTime): boolean {\n    const d = date.toFormat(\"yyyyMMdd\");\n    return this._dailyFileNamesByDate.has(d);\n  }\n}\n","import { createContext, useContext } from \"react\";\nimport useConstant from \"use-constant\";\n\nimport { GMN } from \"./data/GMN\";\n\nexport interface GMNContext {\n  gmn: GMN;\n}\n\nconst Context = createContext<GMNContext | null>(null);\n\nexport function GMNProvider({ children }) {\n  const gmn = useConstant(() => new GMN());\n\n  const contextValue = { gmn };\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n\nexport function useGMN(): GMNContext {\n  const c = useContext(Context);\n  if (c) return c;\n  throw Error(\"useGMN used outside GMNProvider\");\n}\n","import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Skeleton,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/lab\";\nimport { DateTime } from \"luxon\";\nimport useAsyncEffect from \"use-async-effect\";\n\nimport { useGMN } from \"../GMNProvider\";\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n  onLoadMeteors: (date: DateTime) => void;\n}\n\nexport function LoadDailyMeteorsDialog(props: Props) {\n  const { open, onClose, onLoadMeteors } = props;\n\n  const { gmn } = useGMN();\n  const [availablityInitialized, setAvailablityInitialized] = useState(\n    gmn.dailyInitialized\n  );\n  useAsyncEffect(async () => {\n    if (open && !availablityInitialized) {\n      await gmn.initDailyMeteorsAvailable();\n      setAvailablityInitialized(true);\n    }\n  });\n\n  const [date, setDate] = useState<DateTime | null>(null);\n  // const today = DateTime.now();\n\n  const DailyMeteorsDatePicker = () => {\n    return (\n      <DatePicker\n        label=\"dd/mm/yyyy\"\n        value={date}\n        onChange={setDate}\n        renderInput={(params) => <TextField {...params} />}\n        inputFormat=\"dd/MM/yyyy\"\n        shouldDisableDate={(date) =>\n          date > DateTime.now() || !gmn.dailyMeteorsAvailable(date)\n        }\n      />\n    );\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Load Daily Meteors</DialogTitle>\n      <DialogContent>\n        {!availablityInitialized && (\n          <Skeleton>\n            <DailyMeteorsDatePicker />\n          </Skeleton>\n        )}\n        {availablityInitialized && <DailyMeteorsDatePicker />}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={date === null}\n          onClick={() => {\n            console.info(date);\n            if (date) onLoadMeteors(date);\n          }}\n        >\n          Load\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import parse from \"csv-parse/lib/sync\";\nimport { Degrees } from \"../3d/geometry\";\nimport { store } from \"../store\";\n\nexport interface CameraData {\n  identifier: string;\n  latitude: Degrees;\n  longitude: Degrees;\n}\n\nexport async function loadCameras(url: string): Promise<CameraData[]> {\n  const response = await fetch(url);\n  if (response.ok) {\n    const csv = await response.text();\n    // console.info(\"cameras csv\", csv);\n\n    const records = parse(csv, { columns: true });\n    return records.map((r: any) => ({\n      identifier: r.camera_id,\n      latitude: r.obs_latitude,\n      longitude: r.obs_longitude,\n    }));\n  } else return Promise.reject(response.statusText);\n}\n\nexport function initCameras() {\n  loadCameras(\"/meteor-globe/data/cameradetails.csv\")\n    .then((cameras) => {\n      // console.info(\"[cameras]\", cameras);\n      store.update((s) => {\n        const m = s.markers;\n        for (const c of cameras) {\n          m.set(c.identifier, { ...c, label: c.identifier });\n        }\n      });\n    })\n    .catch((e) => {\n      console.error(\"[cameras] load failed\", e);\n    });\n}\n","import { useEffect, useState, useCallback } from \"react\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  Link,\n  IconButton,\n  Alert,\n  Snackbar,\n} from \"@mui/material\";\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport { LocalizationProvider } from \"@mui/lab\";\nimport DateAdapter from \"@mui/lab/AdapterLuxon\";\n\nimport Div100vh from \"react-div-100vh\";\nimport { Settings } from \"luxon\";\n\nimport { Globe } from \"./3d/Globe\";\nimport { MeteorInfo } from \"./ui/MeteorInfo\";\nimport { LoadMeteorsMenu } from \"./ui/LoadMeteorsMenu\";\nimport { LoadDailyMeteorsDialog } from \"./ui/LoadDailyMeteorsDialog\";\n\nimport \"./App.css\";\n\nimport { store } from \"./store\";\nimport { initCameras } from \"./data/cameras\";\nimport {\n  meteorDataInfoFromParams,\n  loadMeteors,\n  MeteorDataInfo,\n  MeteorData,\n} from \"./data/meteors\";\nimport { useGMN } from \"./GMNProvider\";\n\nSettings.defaultZone = \"Europe/London\";\n\nconst queryParams = new URLSearchParams(window.location.search);\nconst formatter = new Intl.NumberFormat();\n\nexport default function App() {\n  const [error, setError] = useState<string | undefined>();\n  const markers = store.useState((s) => s.markers);\n  const meteors = store.useState((s) => s.meteors);\n  const selectedMeteor = store.useState((s) => s.selectedMeteor);\n\n  useEffect(initCameras, []);\n\n  const { gmn } = useGMN();\n\n  const tryLoadMeteors = useCallback((info: MeteorDataInfo) => {\n    loadMeteors(info).catch((e) => {\n      console.error(\"loading\", info, e);\n      setError(`Failed to load ${info.title}`);\n    });\n  }, []);\n\n  useEffect(() => {\n    tryLoadMeteors(meteorDataInfoFromParams(queryParams));\n  }, [tryLoadMeteors]);\n\n  const Header = () => {\n    const loading = store.useState((s) => s.loading);\n    const title = store.useState((s) => s.meteorDataInfo.title);\n    const numMeteors = store.useState((s) => s.meteors.length);\n    const [menuVisible, setMenuVisible] = useState(false);\n    const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement | null>(null);\n    const [loadDailyMeteorsDialogOpen, setLoadDailyMeteorsDialogOpen] =\n      useState(false);\n\n    return (\n      <>\n        <AppBar color=\"transparent\" sx={{ boxShadow: \"none\" }}>\n          <Toolbar>\n            <IconButton\n              onClick={(event) => {\n                setMenuVisible(!menuVisible);\n                setMenuAnchorEl(event.currentTarget);\n              }}\n            >\n              <MenuRoundedIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              {loading && `Loading ${title}...`}\n              {!loading && title}\n              {numMeteors === 1 && ` — 1 meteor`}\n              {numMeteors > 1 && ` — ${formatter.format(numMeteors)} meteors`}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <LoadMeteorsMenu\n          open={menuVisible}\n          onClose={() => setMenuVisible(false)}\n          anchorEl={menuAnchorEl}\n          onLoadMeteors={(info: MeteorDataInfo) => {\n            tryLoadMeteors(info);\n            setMenuVisible(false);\n          }}\n          showLoadDailyDialog={() => {\n            setLoadDailyMeteorsDialogOpen(true);\n            setMenuVisible(false);\n          }}\n        />\n        <LoadDailyMeteorsDialog\n          open={loadDailyMeteorsDialogOpen}\n          onClose={() => setLoadDailyMeteorsDialogOpen(false)}\n          onLoadMeteors={(date) => {\n            const info = gmn.dailyMeteorsInfo(date);\n            console.info(info);\n            tryLoadMeteors(info);\n            setLoadDailyMeteorsDialogOpen(false);\n          }}\n        />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <Snackbar open={error !== undefined}>\n          <Alert severity=\"error\" onClose={() => setError(undefined)}>\n            {error}\n          </Alert>\n        </Snackbar>\n        <Div100vh style={{ display: \"flex\", flexFlow: \"column\" }}>\n          <Header />\n          <Box sx={{ flex: \"1 1 auto\" }}>\n            <Globe\n              markers={[...markers.values()]}\n              meteors={meteors}\n              selectedMeteor={selectedMeteor}\n              selectMeteor={(m: MeteorData) => {\n                console.info(\"SELECT\", m);\n                store.update((s) => {\n                  s.selectedMeteor = m;\n                });\n              }}\n            />\n            {selectedMeteor && <MeteorInfo meteor={selectedMeteor} />}\n          </Box>\n          <Footer />\n        </Div100vh>\n      </LocalizationProvider>\n    </>\n  );\n}\n\nfunction Footer() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}{\" \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://github.com/robagar/meteor-globe\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Rob Agar\n      </Link>\n      {\" (UK003C) \"}\n      {\" — \"}\n      {\"Meteor data from the \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://globalmeteornetwork.org/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Global Meteor Network\n      </Link>\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport \"@fontsource/roboto\";\n\nimport theme from \"./theme\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { GMNProvider } from \"./GMNProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <React.Suspense fallback={<div>Loading... </div>}>\n        <GMNProvider>\n          <App />\n        </GMNProvider>\n      </React.Suspense>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}