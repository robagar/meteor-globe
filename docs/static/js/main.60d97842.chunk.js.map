{"version":3,"sources":["geometry.ts","store.ts","Marker.tsx","Meteor.tsx","Globe.tsx","cameras.ts","meteors.ts","App.tsx","index.tsx"],"names":["EARTH_RADIUS","radians","degrees","Math","PI","position","latitude","longitude","altitude","lat","long","r","cos","sin","xyz","point","height","enableMapSet","store","Store","highlightedMarker","markers","Map","identifier","label","meteors","Marker","props","radius","labelSize","highlighted","useState","s","setHighlighted","update","onPointerOver","e","onPointerOut","args","visible","color","Billboard","Text","anchorX","anchorY","fontSize","Meteor","begin","end","brightness","magnitude","tail","head","tx","ty","tz","center","cx","cy","cz","Vector3","vector","length","width","max","direction","clone","normalize","ref","useRef","useFrame","camera","view","sub","perp","cross","up","right","mesh","current","m","Matrix4","xAxis","yAxis","zAxis","makeBasis","quaternion","setFromRotationMatrix","vertexShader","fragmentShader","transparent","Globe","fov","near","far","material","useTexture","map","bumpMap","specularMap","frameloop","OrbitControls","minDistance","zoomSpeed","rotateSpeed","intensity","i","url","a","fetch","response","ok","text","csv","records","parse","columns","camera_id","obs_latitude","obs_longitude","Promise","reject","statusText","initCameras","loadCameras","then","cameras","console","info","c","set","catch","error","initMeteors","async","line","slice","fields","split","f","trim","parseFloat","time","showerCode","duration","peakHeight","mass","stationCodes","push","fetchline","loadMeteors","App","useEffect","className","values","ReactDOM","render","StrictMode","Suspense","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.60d97842.chunk.js","sourcesContent":["export const EARTH_RADIUS: Km = 6371.37;\n\nexport type Radians = number;\nexport type Degrees = number;\nexport type Km = number;\n\nexport type LatLongHt = {\n  latitude: Degrees;\n  longitude: Degrees;\n  height: Km;\n};\n\nexport function radians(degrees: Degrees): Radians {\n  return (Math.PI * degrees) / 180;\n}\n\nexport type XYZ = [number, number, number];\n\nexport function position(\n  latitude: Degrees,\n  longitude: Degrees,\n  altitude: Km\n): XYZ {\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = altitude + EARTH_RADIUS;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n\nexport function xyz(point: LatLongHt): XYZ {\n  const { latitude, longitude, height } = point;\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = EARTH_RADIUS + height;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n","import { Store } from \"pullstate\";\nimport { enableMapSet } from \"immer\";\n\nimport { MarkerProps } from \"./Marker\";\nimport { MeteorProps } from \"./Meteor\";\n\nenableMapSet();\n\nexport const store = new Store({\n    highlightedMarker: \"\",\n    markers: new Map<string, MarkerProps>([\n        [\n            \"UK003C\",\n            {\n                identifier: \"UK003C\",\n                latitude: 50.224871,\n                longitude: -4.949858,\n                label: \"UK003C\",\n            },\n        ],\n    ]),\n    meteors: [] as MeteorProps[],\n});\n","import { Billboard, Text } from \"@react-three/drei\";\nimport { Degrees, Km, position } from \"./geometry\";\nimport { store } from \"./store\";\n\nexport interface MarkerProps {\n  identifier: string;\n  latitude: Degrees;\n  longitude: Degrees;\n  altitude?: Km;\n  radius?: Km;\n  label?: string;\n  labelSize?: Km;\n}\n\nexport function Marker(props: MarkerProps) {\n  const {\n    identifier,\n    latitude,\n    longitude,\n    altitude = 5,\n    radius = 5,\n    label,\n    labelSize = 30,\n  } = props;\n\n  const highlighted = store.useState((s) => s.highlightedMarker) === identifier;\n  const setHighlighted = (highlighted: boolean) => {\n    if (highlighted) {\n      store.update((s) => {\n        s.highlightedMarker = identifier;\n      });\n    } else {\n      store.update((s) => {\n        if (s.highlightedMarker === identifier) s.highlightedMarker = \"\";\n      });\n    }\n  };\n\n  return (\n    <>\n      <mesh\n        onPointerOver={(e) => setHighlighted(true)}\n        onPointerOut={(e) => setHighlighted(false)}\n        position={position(latitude, longitude, altitude)}\n      >\n        <sphereGeometry args={[radius * 4, 8, 8]} />\n        <meshBasicMaterial visible={false} />\n      </mesh>\n      <mesh position={position(latitude, longitude, altitude)}>\n        <sphereGeometry args={[radius, 16, 16]} />\n        <meshBasicMaterial color=\"hotpink\" />\n      </mesh>\n      {label && (\n        <Billboard\n          visible={highlighted}\n          position={position(latitude, longitude, altitude + 10)}\n        >\n          <Text anchorX=\"left\" anchorY=\"top\" fontSize={labelSize} color=\"white\">\n            {label}\n          </Text>\n        </Billboard>\n      )}\n    </>\n  );\n}\n","import { useRef } from \"react\";\nimport { Mesh, Vector3, Matrix4 } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\n\nimport { LatLongHt, xyz, XYZ, Km } from \"./geometry\";\n\nexport type UTCTime = number;\nexport type ShowerCode = string;\nexport type Seconds = number;\nexport type Magnitude = number;\nexport type Kg = number;\nexport type StationCode = string;\n\nexport interface MeteorProps {\n  time: UTCTime;\n  showerCode: ShowerCode;\n  begin: LatLongHt;\n  end: LatLongHt;\n  peakHeight: Km;\n  magnitude: Magnitude;\n  duration: Seconds;\n  mass: Kg;\n  stationCodes: StationCode[];\n}\n\nconst MIN_WIDTH = 0.1;\nconst MAG_ZERO_WIDTH = 2;\n\nexport function Meteor(props: MeteorProps) {\n  const { begin, end, magnitude } = props;\n\n  const brightness = 1 - magnitude * 0.2;\n\n  const tail = xyz(begin);\n  const head = xyz(end);\n\n  const [tx, ty, tz] = tail;\n  const [hx, hy, hz] = head;\n\n  const center: XYZ = [(tx + hx) / 2, (ty + hy) / 2, (tz + hz) / 2];\n  const [cx, cy, cz] = center;\n  const position = new Vector3(cx, cy, cz);\n\n  const vector = new Vector3(\n    head[0] - tail[0],\n    head[1] - tail[1],\n    head[2] - tail[2]\n  );\n  const length = vector.length();\n  const width = Math.max(MIN_WIDTH, MAG_ZERO_WIDTH * brightness);\n  const direction = vector.clone();\n  direction.normalize();\n\n  const ref = useRef<Mesh>();\n\n  useFrame(({ camera }) => {\n    const view = position.clone().sub(camera.position).normalize();\n    const perp = direction.clone().cross(view).normalize();\n    const up = direction.clone().cross(perp).normalize();\n    const right = direction.clone().cross(up);\n\n    const mesh = ref.current;\n    if (mesh) {\n      const m = new Matrix4();\n      const xAxis = right;\n      const yAxis = direction;\n      const zAxis = up;\n      m.makeBasis(xAxis, yAxis, zAxis);\n      mesh.quaternion.setFromRotationMatrix(m);\n    }\n  });\n\n  const vertexShader = `\n    varying vec2 vUv;\n\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n    }\n  `;\n\n  const fragmentShader = `\n    varying vec2 vUv;\n\n    void main() {\n      float x = vUv.x;\n      float y = vUv.y;\n      float c = (x < 0.5 ? x : (1.0 - x)) * 2.0;\n      float p = 0.75;\n      float l = y < p ? (y / p) : (1.0 - y) / (1.0 - p);\n      float opacity = c * l;\n      gl_FragColor = vec4(1, 1, 1, opacity);\n    }\n  `;\n\n  return (\n    <mesh ref={ref} position={center}>\n      <planeGeometry args={[width, length]} />\n      <shaderMaterial\n        vertexShader={vertexShader}\n        fragmentShader={fragmentShader}\n        transparent={true}\n      />\n    </mesh>\n  );\n}\n","import { Canvas } from \"@react-three/fiber\";\nimport { useTexture, OrbitControls } from \"@react-three/drei\";\n\nimport { EARTH_RADIUS, position } from \"./geometry\";\n\nimport { Marker, MarkerProps } from \"./Marker\";\nimport { Meteor, MeteorProps } from \"./Meteor\";\n\nexport interface GlobeProps {\n  markers: MarkerProps[];\n  meteors: MeteorProps[];\n}\n\nconst MIN_CAMERA_ALTITUDE = 200;\n\nexport function Globe(props: GlobeProps) {\n  const { markers, meteors } = props;\n\n  const camera = {\n    fov: 75,\n    near: 10,\n    far: 100000,\n    position: position(50.22, -4.95, 1500),\n  };\n  const material = useTexture({\n    map: \"/meteor-globe/textures/2_no_clouds_4k.jpeg\",\n    bumpMap: \"/meteor-globe/textures/elev_bump_4k.jpeg\",\n    specularMap: \"/meteor-globe/textures/water_4k.png\",\n  });\n  return (\n    <Canvas frameloop=\"demand\" camera={camera}>\n      <OrbitControls\n        minDistance={EARTH_RADIUS + MIN_CAMERA_ALTITUDE}\n        zoomSpeed={1}\n        rotateSpeed={1}\n      />\n      {/*<axesHelper args={[5000]} />*/}\n      <ambientLight intensity={0.1} />\n      <directionalLight color=\"white\" position={position(0, 0, 1)} />\n\n      <mesh>\n        <sphereGeometry args={[EARTH_RADIUS, 128, 128]} />\n        <meshPhongMaterial {...material} />\n      </mesh>\n\n      {markers.map((m) => (\n        <Marker key={`marker-${m.identifier}`} {...m} />\n      ))}\n      {meteors.map((m, i) => (\n        <Meteor key={`meteor-${i}`} {...m} />\n      ))}\n    </Canvas>\n  );\n}\n","import parse from \"csv-parse/lib/sync\";\nimport { Degrees } from \"./geometry\";\nimport { store } from \"./store\";\n\nexport interface CameraData {\n  identifier: string;\n  latitude: Degrees;\n  longitude: Degrees;\n}\n\nexport async function loadCameras(url: string): Promise<CameraData[]> {\n  const response = await fetch(url);\n  if (response.ok) {\n    const csv = await response.text();\n    // console.info(\"cameras csv\", csv);\n\n    const records = parse(csv, { columns: true });\n    return records.map((r: any) => ({\n      identifier: r.camera_id,\n      latitude: r.obs_latitude,\n      longitude: r.obs_longitude,\n    }));\n  } else return Promise.reject(response.statusText);\n}\n\nexport function initCameras() {\n  loadCameras(\"/meteor-globe/data/cameradetails.csv\")\n    .then((cameras) => {\n      console.info(\"[cameras]\", cameras);\n      store.update((s) => {\n        const m = s.markers;\n        for (const c of cameras) {\n          m.set(c.identifier, { ...c, label: c.identifier });\n        }\n      });\n    })\n    .catch((e) => {\n      console.error(\"[cameras] load failed\", e);\n    });\n}\n","import fetchline from \"fetchline\";\n\nimport { store } from \"./store\";\nimport { MeteorProps } from \"./Meteor\";\n\nexport function initMeteors() {\n  loadMeteors(\n    \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_yesterday.txt\"\n    // \"/meteor-globe/data/traj_summary_20210812_solrange_140.0-141.0.txt\"\n    // \"/meteor-globe/data/one_perseid.txt\"\n  ).catch((e) => {\n    console.error(\"[meteors] load failed\", e);\n  });\n}\n\n// column indices\nconst BEGIN_UTC_TIME = 1;\nconst IAU_CODE = 3;\nconst BEGIN_LATITUDE = 60;\nconst BEGIN_LONGITUDE = 62;\nconst BEGIN_HEIGHT = 64;\nconst END_LATITUDE = 66;\nconst END_LONGITUDE = 68;\nconst END_HEIGHT = 70;\nconst DURATION = 72;\nconst MAGNITUDE = 73;\nconst PEAK_HEIGHT = 74;\nconst MASS = 76;\nconst STATION_CODES = 82;\n\nconst NUM_COLUMNS = 83;\n\nasync function loadMeteors(url: string) {\n  const meteors: MeteorProps[] = [];\n  for await (let line of fetchline(url)) {\n    if (line.length === 0) continue;\n    if (line[0] === \"\\r\") line = line.slice(1); // fetchline bug?\n    if (line[0] === \"#\") continue; // comment, probably column headers\n\n    const fields = line.split(\";\");\n    if (fields.length !== NUM_COLUMNS) continue;\n\n    const s = (i: number): string => {\n      const f = fields[i];\n      return f ? f.trim() : \"\";\n    };\n\n    const f = (i: number): number => {\n      return parseFloat(s(i));\n    };\n\n    const time = f(BEGIN_UTC_TIME);\n    const showerCode = s(IAU_CODE);\n    const begin = {\n      latitude: f(BEGIN_LATITUDE),\n      longitude: f(BEGIN_LONGITUDE),\n      height: f(BEGIN_HEIGHT),\n    };\n    const end = {\n      latitude: f(END_LATITUDE),\n      longitude: f(END_LONGITUDE),\n      height: f(END_HEIGHT),\n    };\n    const duration = f(DURATION);\n    const magnitude = f(MAGNITUDE);\n    const peakHeight = f(PEAK_HEIGHT);\n    const mass = f(MASS);\n    const stationCodes = s(STATION_CODES).split(\",\");\n\n    meteors.push({\n      time,\n      showerCode,\n      begin,\n      end,\n      peakHeight,\n      magnitude,\n      duration,\n      mass,\n      stationCodes,\n    });\n  }\n\n  store.update((s) => {\n    s.meteors = meteors;\n  });\n}\n","import { useEffect } from \"react\";\n\nimport { Globe } from \"./Globe\";\nimport \"./App.css\";\n\nimport { store } from \"./store\";\nimport { initCameras } from \"./cameras\";\nimport { initMeteors } from \"./meteors\";\n\nfunction App() {\n  const markers = store.useState((s) => s.markers);\n  const meteors = store.useState((s) => s.meteors);\n\n  useEffect(initCameras, []);\n  useEffect(initMeteors, []);\n\n  return (\n    <div className=\"App\">\n      <Globe markers={[...markers.values()]} meteors={meteors} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Suspense fallback={<div>Loading... </div>}>\n      <App />\n    </React.Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}