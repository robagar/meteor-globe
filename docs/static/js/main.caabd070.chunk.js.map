{"version":3,"sources":["theme.ts","settings.ts","constants.ts","store.ts","data/cameras.ts","data/showers.ts","data/stations.ts","data/meteors.ts","ui/AppMenu.tsx","3d/geometry.ts","format.ts","ui/MeteorInfo.tsx","data/GMN.ts","GMNProvider.tsx","ui/LoadDailyMeteorsDialog.tsx","ui/filter/ShowerFilter.tsx","ui/filter/MagnitudeFilter.tsx","ui/filter/StationPrefixFilter.tsx","ui/filter/StationFilter.tsx","ui/Filter.tsx","ui/Settings.tsx","ui/MeteorTooltip.tsx","3d/InstancedMeteors.tsx","3d/CameraControls.tsx","3d/Globe.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","palette","mode","SETTINGS","DEFAULT_SETTINGS","showClouds","light","cityLights","highResolutionTextures","saveSettings","settings","localStorage","setItem","JSON","stringify","EARTH_RADIUS","MIN_MAGNITUDE","MAX_MAGNITUDE","DEFAULT_UP","DEFAULT_CAMERA_CONTROL","target","up","minDistance","maxDistance","CITY_LIGHTS_COLOR","Color","BLACK","enableMapSet","store","Store","highlightedMarker","markers","Map","identifier","latitude","longitude","label","loading","meteorDataInfo","url","title","meteors","selectedMeteor","undefined","activeShowers","stationsByCode","stations","filter","showers","magnitude","min","max","codes","prefixes","cameraControl","s","getItem","parse","e","console","error","loadSettings","a","fetch","response","ok","text","csv","records","columns","map","r","camera_id","obs_latitude","obs_longitude","Promise","reject","statusText","initCameras","loadCameras","then","cameras","update","m","c","set","catch","require","showersByCode","code","SPORADIC_CODE","SPORADIC","name","numMeteors","getShower","get","u","isSporadic","shower","buildActiveShowers","meteor","activeShower","push","values","sort","b","length","initStations","activeStationCodes","Set","stationCodes","has","add","localeCompare","info","METEORS_YESTERDAY","METEORS_LATEST_DAILY","fetchMeteorData","async","nextIndex","headers","line","trim","slice","startsWith","i","fields","split","f","warn","parseFloat","beginTime","showerCode","begin","height","end","averageSpeed","duration","peakHeight","mass","index","fetchline","AppMenu","props","anchorEl","open","onClose","onLoadMeteors","showLoadDailyDialog","resetView","Menu","MenuItem","onClick","Divider","radians","degrees","Math","PI","position","altitude","localUp","x","y","z","xyz","point","lat","long","cos","sin","toDateTime","DateTime","fromISO","replace","zone","formatDateTime","toLocaleString","DATETIME_MED_WITH_SECONDS","heightFormatter","Intl","NumberFormat","maximumFractionDigits","formatLatLongHt","p","formatAngle","h","format","degreesFormatter","angle","positiveSuffix","negativeSuffix","abs","suffix","speedFormatter","formatSpeed","speed","MeteorInfo","focusMeteor","Box","className","sx","px","pb","Stack","direction","justifyContent","alignItems","Tooltip","IconButton","join","URL_BASE","DAILY_URL_REGEX","GMN","_dailyFileNamesByDate","_dailyInitialized","filename","date","d","toFormat","this","Error","DATE_FULL","dailyMeteorsUrl","ms","matchAll","groups","Context","createContext","GMNProvider","children","contextValue","gmn","useConstant","Provider","value","useGMN","useContext","LoadDailyMeteorsDialog","useState","dailyInitialized","availablityInitialized","setAvailablityInitialized","useAsyncEffect","initDailyMeteorsAvailable","setDate","DailyMeteorsDatePicker","DatePicker","onChange","renderInput","params","TextField","inputFormat","shouldDisableDate","now","dailyMeteorsAvailable","Dialog","DialogTitle","DialogContent","Skeleton","DialogActions","Button","disabled","ShowerFilter","filterShowers","FormControl","width","InputLabel","id","Select","labelId","multiple","includes","input","OutlinedInput","renderValue","selected","event","MenuProps","Checkbox","checked","ListItemText","formatter","autoFocus","PaperProps","style","maxHeight","ITEM_HEIGHT","MagnitudeFilter","my","Slider","valueLabelDisplay","step","marks","valueUnless","unless","StationPrefixFilter","toUpperCase","rawPrefixes","filtered","prefix","station","StationFilter","Filter","Toolbar","Typography","variant","Settings","FormControlLabel","control","Switch","MeteorTooltip","DEFAULT_COLOR","HIGHLIGHTED_COLOR","SELECTED_COLOR","BATCH_SIZE","ZERO_MATRIX","Matrix4","InstancedMeteors","data","selectMeteor","filteredMeteors","ref","useRef","useFrame","camera","meshes","current","j","mesh","setMatrixAt","buildMeteorMatrix","color","hover","setColorAt","instanceMatrix","needsUpdate","instanceColor","setHover","invalidate","useThree","lastFilterMeteorsRef","renderBatch","batch","offset","args","instanceId","stopPropagation","onDoubleClick","onPointerOver","onPointerOut","vertexShader","fragmentShader","transparent","depthWrite","Html","calculatePosition","el","size","parent","InstancedMesh","getMatrixAt","objectPos","v1","setFromMatrixPosition","project","widthHalf","heightHalf","calculateTooltipPosition","batches","n","numBatches","ceil","Vector3","cameraPosition","brightness","tail","head","tx","ty","tz","center","cx","cy","cz","vector","clone","normalize","view","sub","perp","cross","right","rotation","xAxis","yAxis","zAxis","makeBasis","quaternion","Quaternion","setFromRotationMatrix","scale","compose","CAMERA_CONFIG","fov","near","far","CameraControls","createRef","state","v","vector3EqualsXYZ","reset","updateProjectionMatrix","OrbitControls","zoomSpeed","rotateSpeed","Globe","setCameraControl","material","useTexture","bumpMap","specularMap","emissiveMap","chooseTextures","clouds","frameloop","intensity","visible","emissive","alphaMap","LuxonSettings","defaultZone","queryParams","URLSearchParams","window","location","search","App","setError","useCallback","focusedMeteorCameraControl","useEffect","tryLoadMeteors","loadMeteors","test","meteorDataInfoFromParams","filterVisible","setFilterVisible","meteorVisibility","some","filterMeteors","settingsVisible","setSettingsVisible","subscribe","Header","numVisibleMeteors","menuVisible","setMenuVisible","menuAnchorEl","setMenuAnchorEl","loadDailyMeteorsDialogOpen","setLoadDailyMeteorsDialogOpen","AppBar","boxShadow","display","flexGrow","currentTarget","titleSuffix","dailyMeteorsInfo","LocalizationProvider","dateAdapter","DateAdapter","Snackbar","Alert","severity","flexFlow","flex","focus","bottom","Footer","Drawer","anchor","align","Date","getFullYear","Link","href","rel","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","Suspense","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.caabd070.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport default theme;\n","import { SettingsData } from \"./interfaces\";\n\nconst SETTINGS = \"settings\";\n\nconst DEFAULT_SETTINGS = {\n  showClouds: true,\n  light: true,\n  cityLights: false,\n  highResolutionTextures: true,\n};\n\nexport function saveSettings(settings: SettingsData) {\n  localStorage.setItem(SETTINGS, JSON.stringify(settings));\n}\n\nexport function loadSettings(): SettingsData {\n  try {\n    const s = localStorage.getItem(SETTINGS);\n    if (s) return JSON.parse(s);\n  } catch (e) {\n    console.error(\"[settings] load failed\", e);\n  }\n  return DEFAULT_SETTINGS;\n}\n","import { Color } from \"three\";\nimport { XYZ, Km, Magnitude, CameraControlData } from \"./interfaces\";\n\nexport const EARTH_RADIUS: Km = 6371.37;\n\nexport const MIN_MAGNITUDE: Magnitude = -10;\nexport const MAX_MAGNITUDE: Magnitude = 10;\n\nconst MIN_CAMERA_HEIGHT: Km = 200;\nconst MAX_CAMERA_HEIGHT: Km = 10000;\n\nexport const DEFAULT_UP: XYZ = [0, 1, 0];\n\nexport const DEFAULT_CAMERA_CONTROL: CameraControlData = {\n  target: [0, 0, 0],\n  up: DEFAULT_UP,\n  minDistance: EARTH_RADIUS + MIN_CAMERA_HEIGHT,\n  maxDistance: EARTH_RADIUS + MAX_CAMERA_HEIGHT,\n};\n\nexport const CLOUD_HEIGHT = 10;\n\nexport const CITY_LIGHTS_COLOR = new Color(0xffff80);\nexport const BLACK = new Color(0x000000);\nexport const AMBIENT_LIGHT_INTENSITY = 0.075;\n","import { Store } from \"pullstate\";\nimport { enableMapSet } from \"immer\";\n\nimport { MarkerProps } from \"./3d/Marker\";\nimport { AppState, StationData, StationCode } from \"./interfaces\";\nimport { loadSettings } from \"./settings\";\nimport { DEFAULT_CAMERA_CONTROL } from \"./constants\";\n\nenableMapSet();\n\nexport const store = new Store<AppState>({\n  highlightedMarker: \"\",\n  markers: new Map<string, MarkerProps>([\n    [\n      \"UK003C\",\n      {\n        identifier: \"UK003C\",\n        latitude: 50.224871,\n        longitude: -4.949858,\n        label: \"UK003C\",\n      },\n    ],\n  ]),\n  loading: true,\n  meteorDataInfo: {\n    url: \"\",\n    title: \"\",\n  },\n  meteors: [],\n  selectedMeteor: undefined,\n  activeShowers: [],\n  stationsByCode: new Map<StationCode, StationData>(),\n  stations: [],\n  filter: {\n    showers: [],\n    magnitude: { min: undefined, max: undefined },\n    stations: {\n      codes: [],\n      prefixes: \"\",\n    },\n  },\n  cameraControl: DEFAULT_CAMERA_CONTROL,\n  settings: loadSettings(),\n});\n","import parse from \"csv-parse/lib/sync\";\nimport { Degrees } from \"../interfaces\";\nimport { store } from \"../store\";\n\nexport interface CameraData {\n  identifier: string;\n  latitude: Degrees;\n  longitude: Degrees;\n}\n\nexport async function loadCameras(url: string): Promise<CameraData[]> {\n  const response = await fetch(url);\n  if (response.ok) {\n    const csv = await response.text();\n    // console.info(\"cameras csv\", csv);\n\n    const records = parse(csv, { columns: true });\n    return records.map((r: any) => ({\n      identifier: r.camera_id,\n      latitude: r.obs_latitude,\n      longitude: r.obs_longitude,\n    }));\n  } else return Promise.reject(response.statusText);\n}\n\nexport function initCameras() {\n  loadCameras(\"/meteor-globe/data/cameradetails.csv\")\n    .then((cameras) => {\n      // console.info(\"[cameras]\", cameras);\n      store.update((s) => {\n        const m = s.markers;\n        for (const c of cameras) {\n          m.set(c.identifier, { ...c, label: c.identifier });\n        }\n      });\n    })\n    .catch((e) => {\n      console.error(\"[cameras] load failed\", e);\n    });\n}\n","import { MeteorData, ShowerData, ActiveShowerData } from \"../interfaces\";\n\nconst showers = require(\"./showers.json\");\nconst showersByCode = new Map<string, ShowerData>();\nfor (const s of showers) {\n  // console.info(s);\n  showersByCode.set(s.code, s);\n}\n\nconst SPORADIC_CODE = \"...\";\nconst SPORADIC = {\n  code: SPORADIC_CODE,\n  name: \"(sporadic)\",\n  numMeteors: 0,\n};\n\nexport function getShower(code: string): ShowerData {\n  if (code === SPORADIC_CODE) return SPORADIC;\n\n  const s = showersByCode.get(code);\n  if (s) return s;\n\n  // not in IAU list\n  const u = {\n    code,\n    name: \"(unknown)\",\n  };\n  showersByCode.set(code, u);\n  return u;\n}\n\nexport function isSporadic(shower: ShowerData) {\n  return shower.code === SPORADIC_CODE;\n}\n\nexport function buildActiveShowers(meteors: MeteorData[]): ActiveShowerData[] {\n  const map = new Map<ShowerData, ActiveShowerData>();\n\n  for (const meteor of meteors) {\n    const { shower } = meteor;\n    const activeShower = map.get(shower);\n    if (activeShower) {\n      activeShower.meteors.push(meteor);\n    } else {\n      map.set(shower, {\n        shower,\n        meteors: [meteor],\n      });\n    }\n  }\n\n  const activeShowers = [...map.values()];\n  activeShowers.sort((a, b) => b.meteors.length - a.meteors.length);\n  return activeShowers;\n}\n","import { StationCode, StationData, MeteorData } from \"../interfaces\";\n\nexport function initStations(\n  meteors: MeteorData[],\n  stationsByCode: Map<string, StationData>\n): StationData[] {\n  const activeStationCodes = new Set<StationCode>();\n  for (const m of meteors) {\n    for (const code of m.stationCodes) {\n      if (!stationsByCode.has(code)) {\n        stationsByCode.set(code, { code });\n      }\n      activeStationCodes.add(code);\n    }\n  }\n\n  const stations: StationData[] = [];\n  for (const c of activeStationCodes) {\n    stations.push(stationsByCode.get(c)!);\n  }\n  stations.sort((a, b) => a.code.localeCompare(b.code));\n  console.info(\"[stations]\", stations.length);\n  return stations;\n}\n","import fetchline from \"fetchline\";\n\nimport { store } from \"../store\";\nimport { MeteorDataInfo, MeteorData, FilterData } from \"../interfaces\";\nimport { getShower, buildActiveShowers } from \"./showers\";\nimport { initStations } from \"./stations\";\n\nexport const DEFAULT_COLOR = [1, 1, 1];\nexport const HIGHLIGHTED_COLOR = [1.0, 0.27, 0.71]; // CSS hotpink #FF69B4\n\nexport const METEORS_YESTERDAY = {\n  url: \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_yesterday.txt\",\n  title: \"Yesterday\",\n};\n\nexport const METEORS_LATEST_DAILY = {\n  url: \"https://globalmeteornetwork.org/data/traj_summary_data/daily/traj_summary_latest_daily.txt\",\n  title: \"Latest Daily\",\n};\n\nexport function meteorDataInfoFromParams(\n  params: URLSearchParams\n): MeteorDataInfo {\n  const test = params.get(\"test\");\n  if (test !== null) {\n    switch (test) {\n      case \"one_perseid\":\n        return {\n          url: \"/meteor-globe/data/one_perseid.txt\",\n          title: \"Test - One Perseid\",\n        };\n      default:\n        return {\n          url: \"/meteor-globe/data/traj_summary_20210812_solrange_140.0-141.0.txt\",\n          title: \"Test - Lots of Perseids\",\n        };\n    }\n  }\n\n  // default to all detected by GMN yesterday\n  return METEORS_YESTERDAY;\n}\n\nexport async function loadMeteors(info: MeteorDataInfo) {\n  console.info(\"[meteors] LOAD\", info.title, info.url);\n\n  store.update((s) => {\n    s.meteorDataInfo = info;\n    s.loading = true;\n    s.selectedMeteor = undefined;\n    s.meteors = [];\n    s.activeShowers = [];\n  });\n\n  try {\n    const meteors = await fetchMeteorData(info.url);\n    const activeShowers = buildActiveShowers(meteors);\n    store.update((s) => {\n      s.loading = false;\n      s.meteors = meteors;\n      s.activeShowers = activeShowers;\n      s.stations = initStations(meteors, s.stationsByCode);\n\n      s.filter.showers = activeShowers.map((a) => a.shower);\n      s.filter.stations.codes = s.stations.map((s) => s.code);\n    });\n  } finally {\n    store.update((s) => {\n      s.loading = false;\n    });\n  }\n}\n\n// column indices\n// const BEGIN_UTC_TIME = 1;\n// const IAU_CODE = 3;\n// const AVERAGE_SPEED = 58;\n// const BEGIN_LATITUDE = 60;\n// const BEGIN_LONGITUDE = 62;\n// const BEGIN_HEIGHT = 64;\n// const END_LATITUDE = 66;\n// const END_LONGITUDE = 68;\n// const END_HEIGHT = 70;\n// const DURATION = 72;\n// const MAGNITUDE = 73;\n// const PEAK_HEIGHT = 74;\n// const MASS = 76;\n// const STATION_CODES = 82;\n\n// const NUM_COLUMNS = 83;\n\nconst BEGIN_UTC_TIME = 2;\nconst IAU_CODE = 4;\nconst AVERAGE_SPEED = 61;\nconst BEGIN_LATITUDE = 63;\nconst BEGIN_LONGITUDE = 65;\nconst BEGIN_HEIGHT = 67;\nconst END_LATITUDE = 69;\nconst END_LONGITUDE = 71;\nconst END_HEIGHT = 73;\nconst DURATION = 75;\nconst MAGNITUDE = 76;\nconst PEAK_HEIGHT = 77;\nconst MASS = 79;\nconst STATION_CODES = 85;\n\nconst NUM_COLUMNS = 86;\n\nasync function fetchMeteorData(url: string): Promise<MeteorData[]> {\n  const meteors: MeteorData[] = [];\n  let nextIndex = 0;\n  const headers: string[] = [];\n  for await (let line of fetchline(url)) {\n    if (line.trim().length === 0) continue;\n    if (line[0] === \"\\r\") line = line.slice(1); // fetchline bug?\n    if (line[0] === \"#\") {\n      // comment\n      if (line.startsWith(\"# Summary\")) {\n        // description\n        console.info(line);\n      } else if (line.startsWith(\"# ---\")) {\n        // end of column headers\n        console.info(\"headers:\");\n        for (let i = 0; i < headers.length; ++i) {\n          console.info(i, headers[i]);\n        }\n      } else {\n        // probably column headers\n        const fields = line.slice(1).split(\";\");\n        for (let i = 0; i < fields.length; ++i) {\n          const f = fields[i].trim();\n          if (headers[i] === undefined) headers[i] = f;\n          else headers[i] += \" \" + f;\n        }\n      }\n      continue;\n    }\n\n    const fields = line.split(\";\");\n    if (fields.length !== NUM_COLUMNS) {\n      console.warn(\n        `wrong number of columns - ${fields.length}, expected ${NUM_COLUMNS}`,\n        line\n      );\n      continue;\n    }\n\n    const s = (i: number): string => {\n      const f = fields[i];\n      return f ? f.trim() : \"\";\n    };\n\n    const f = (i: number): number => {\n      return parseFloat(s(i));\n    };\n\n    const beginTime = s(BEGIN_UTC_TIME);\n    const showerCode = s(IAU_CODE);\n    const begin = {\n      latitude: f(BEGIN_LATITUDE),\n      longitude: f(BEGIN_LONGITUDE),\n      height: f(BEGIN_HEIGHT),\n    };\n    const end = {\n      latitude: f(END_LATITUDE),\n      longitude: f(END_LONGITUDE),\n      height: f(END_HEIGHT),\n    };\n    const averageSpeed = f(AVERAGE_SPEED);\n    const duration = f(DURATION);\n    const magnitude = f(MAGNITUDE);\n    const peakHeight = f(PEAK_HEIGHT);\n    const mass = f(MASS);\n    const stationCodes = s(STATION_CODES).split(\",\");\n\n    const shower = getShower(showerCode);\n    meteors.push({\n      index: nextIndex++,\n      beginTime,\n      shower,\n      begin,\n      end,\n      peakHeight,\n      magnitude,\n      duration,\n      mass,\n      averageSpeed,\n      stationCodes,\n    });\n  }\n\n  return meteors;\n}\n\nexport function filterMeteors(\n  filter: FilterData,\n  meteors: MeteorData[]\n): boolean[] {\n  return meteors.map((m) => {\n    const { shower, magnitude, stationCodes } = m;\n\n    // by shower\n    if (!filter.showers.includes(shower)) return false;\n\n    // by magnitude\n    const { min, max } = filter.magnitude;\n    if (min !== undefined && magnitude < min) return false;\n    if (max !== undefined && magnitude > max) return false;\n\n    // by station code\n    if (!stationCodes.some((c) => filter.stations.codes.includes(c)))\n      return false;\n\n    return true;\n  });\n}\n","import { Menu, MenuItem, Divider } from \"@mui/material\";\n\nimport { MeteorDataInfo } from \"../interfaces\";\nimport { METEORS_YESTERDAY, METEORS_LATEST_DAILY } from \"../data/meteors\";\n\ninterface Props {\n  anchorEl: HTMLElement | null;\n  open: boolean;\n  onClose: () => void;\n  onLoadMeteors: (info: MeteorDataInfo) => void;\n  showLoadDailyDialog: () => void;\n  resetView: () => void;\n}\n\nexport function AppMenu(props: Props) {\n  const {\n    anchorEl,\n    open,\n    onClose,\n    onLoadMeteors,\n    showLoadDailyDialog,\n    resetView,\n  } = props;\n\n  return (\n    <Menu open={open} onClose={onClose} anchorEl={anchorEl}>\n      <MenuItem\n        onClick={() => {\n          onLoadMeteors(METEORS_YESTERDAY);\n        }}\n      >\n        {METEORS_YESTERDAY.title}\n      </MenuItem>\n      <MenuItem\n        onClick={() => {\n          onLoadMeteors(METEORS_LATEST_DAILY);\n        }}\n      >\n        {METEORS_LATEST_DAILY.title}\n      </MenuItem>\n      <MenuItem onClick={showLoadDailyDialog}>Daily...</MenuItem>\n      <Divider />\n      <MenuItem onClick={resetView}>Reset view</MenuItem>\n    </Menu>\n  );\n}\n","import { Vector3 } from \"three\";\nimport { Degrees, Radians, Km, XYZ, LatLongHt } from \"../interfaces\";\nimport { EARTH_RADIUS } from \"../constants\";\n\nexport function radians(degrees: Degrees): Radians {\n  return (Math.PI * degrees) / 180;\n}\n\nexport function position(\n  latitude: Degrees,\n  longitude: Degrees,\n  altitude: Km\n): XYZ {\n  const [x, y, z] = localUp(latitude, longitude);\n  const r = altitude + EARTH_RADIUS;\n  return [r * x, r * y, r * z];\n}\n\nexport function xyz(point: LatLongHt): XYZ {\n  const { latitude, longitude, height } = point;\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const r = EARTH_RADIUS + height;\n  const x = r * Math.cos(lat) * Math.cos(-long);\n  const y = r * Math.sin(lat);\n  const z = r * Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n\nexport function localUp(latitude: Degrees, longitude: Degrees): XYZ {\n  const lat = radians(latitude);\n  const long = radians(longitude);\n  const x = Math.cos(lat) * Math.cos(-long);\n  const y = Math.sin(lat);\n  const z = Math.cos(lat) * Math.sin(-long);\n  return [x, y, z];\n}\n\nexport function vector3EqualsXYZ(v: Vector3, xyz: XYZ): boolean {\n  const [x, y, z] = xyz;\n  return v.x === x && v.y === y && v.z === z;\n}\n","import { DateTime } from \"luxon\";\nimport { sexagesimal } from \"astronomia\";\n\nimport { radians } from \"./3d/geometry\";\nimport { LatLongHt, Degrees, Kms } from \"./interfaces\";\n\nfunction toDateTime(s: string): DateTime {\n  return DateTime.fromISO(s.replace(\" \", \"T\"), {\n    zone: \"UTC\",\n  });\n}\n\nexport function formatDateTime(s: string) {\n  const t = toDateTime(s);\n  return t.toLocaleString(DateTime.DATETIME_MED_WITH_SECONDS) + \" UTC\";\n}\n\nexport function formatDateTimeRange(from: string, to: string) {\n  const f = toDateTime(from).toLocaleString(DateTime.DATETIME_MED_WITH_SECONDS);\n  const t = toDateTime(to).toLocaleString(DateTime.TIME_WITH_SECONDS);\n  return `${f} → ${t} UTC`;\n}\n\nconst heightFormatter = new Intl.NumberFormat(undefined, {\n  maximumFractionDigits: 1,\n});\n\nexport function formatLatLongHt(p: LatLongHt): string {\n  const lat = formatAngle(p.latitude, \"N\", \"S\");\n  const long = formatAngle(p.longitude, \"E\", \"W\");\n  const h = heightFormatter.format(p.height);\n  return `${lat} ${long}, ${h}km`;\n}\n\nexport function formatAngleDMS(\n  angle: Degrees,\n  positiveSuffix: string,\n  negativeSuffix: string,\n  precision: number = 2\n) {\n  const a = new sexagesimal.Angle(Math.abs(radians(angle)));\n  const suffix = angle >= 0 ? positiveSuffix : negativeSuffix;\n  return `${a.toString(precision)}${suffix}`;\n}\n\nconst degreesFormatter = new Intl.NumberFormat(undefined, {\n  maximumFractionDigits: 2,\n});\n\nexport function formatAngle(\n  angle: Degrees,\n  positiveSuffix: string,\n  negativeSuffix: string\n) {\n  const a = degreesFormatter.format(Math.abs(angle));\n  const suffix = angle >= 0 ? positiveSuffix : negativeSuffix;\n  return `${a}${suffix}`;\n}\n\nconst speedFormatter = new Intl.NumberFormat(undefined, {\n  maximumFractionDigits: 0,\n});\n\nexport function formatSpeed(speed: Kms): string {\n  const s = speedFormatter.format(speed);\n  return `${s}kms⁻¹`;\n}\n","import { Box, Stack, IconButton, Tooltip } from \"@mui/material\";\nimport CenterFocusStrongRoundedIcon from \"@mui/icons-material/CenterFocusStrongRounded\";\n\nimport { MeteorData } from \"../interfaces\";\nimport { isSporadic } from \"../data/showers\";\nimport { formatDateTime, formatLatLongHt, formatSpeed } from \"../format\";\n\nimport \"./MeteorInfo.css\";\n\nexport interface MeteorInfoProps {\n  meteor: MeteorData;\n  focusMeteor: () => void;\n}\n\nexport function MeteorInfo(props: MeteorInfoProps) {\n  const { meteor, focusMeteor } = props;\n  const {\n    shower,\n    beginTime,\n    begin,\n    end,\n    magnitude,\n    duration,\n    averageSpeed,\n    stationCodes,\n  } = meteor;\n\n  return (\n    <Box className=\"meteorInfo\" sx={{ px: 1, pb: 1 }}>\n      <Stack\n        direction=\"row\"\n        sx={{ justifyContent: \"space-between\", alignItems: \"center\" }}\n      >\n        <div>\n          {!isSporadic(shower) && (\n            <span className=\"showerCode\">\n              {shower.code}\n              {\" — \"}\n            </span>\n          )}\n          <span className=\"showerName\">{shower.name}</span>\n        </div>\n        <Tooltip title=\"Focus view on this meteor\">\n          <IconButton\n            onClick={() => {\n              focusMeteor();\n            }}\n          >\n            <CenterFocusStrongRoundedIcon />\n          </IconButton>\n        </Tooltip>\n      </Stack>\n      <div className=\"beginTime\">{formatDateTime(beginTime)}</div>\n      <div className=\"meteorDetails\">\n        {formatLatLongHt(begin)} → {formatLatLongHt(end)}\n      </div>\n      <table className=\"meteorDetails\">\n        <tbody>\n          <tr>\n            <th>Magnitude</th>\n            <td>{magnitude}</td>\n          </tr>\n          <tr>\n            <th>Duration</th>\n            <td>{duration}s</td>\n          </tr>\n          <tr>\n            <th>Average speed</th>\n            <td>{formatSpeed(averageSpeed)}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </Box>\n  );\n}\n","import { DateTime } from \"luxon\";\n// import { base, julian, solar } from \"astronomia\";\nimport { MeteorDataInfo } from \"../interfaces\";\n\nconst URL_BASE = \"https://globalmeteornetwork.org/data/traj_summary_data/\";\n\n// const GMN_EARLIEST_DATE = DateTime.fromISO(\"2020-09-18\").toJSDate();\n\nconst DAILY_URL_REGEX =\n  /<a href=\"(?<filename>traj_summary_(?<date>\\d{8})_solrange_(?<solarLongitudeFrom>\\d{3}.\\d)-(?<solarLongitudeTo>\\d{3}.\\d).txt)\">/g;\n\nexport class GMN {\n  url(filename: string) {\n    return URL_BASE + filename;\n  }\n\n  dailyMeteorsUrl(date: DateTime) {\n    // const jde = julian.DateToJDE(date.toJSDate());\n    // const c = base.J2000Century(jde);\n    // const { lon } = solar.true2000(c);\n    // const l = Math.ceil((180 * lon) / Math.PI);\n    // const d = date.toFormat(\"yyyyMMdd\");\n    // const f = `daily/traj_summary_${d}_solrange_${l}.0-${l + 1}.0.txt`;\n    // console.info(date, jde, c, lon);\n    // console.info(d, l, f);\n\n    const d = date.toFormat(\"yyyyMMdd\");\n    const f = this._dailyFileNamesByDate.get(d);\n    if (f) return this.url(`daily/${f}`);\n    throw Error(`No daily data available for ${date}`);\n  }\n\n  dailyMeteorsInfo(date: DateTime): MeteorDataInfo {\n    return {\n      title: \"Daily \" + date.toLocaleString(DateTime.DATE_FULL),\n      url: this.dailyMeteorsUrl(date),\n    };\n  }\n\n  private _dailyFileNamesByDate = new Map<string, string>();\n  private _dailyInitialized = false;\n\n  get dailyInitialized() {\n    return this._dailyInitialized;\n  }\n\n  async initDailyMeteorsAvailable() {\n    if (!this._dailyInitialized) {\n      try {\n        const r = await fetch(URL_BASE + \"daily/\");\n        if (r.ok) {\n          const s = await r.text();\n          const ms = s.matchAll(DAILY_URL_REGEX);\n          for (const m of ms) {\n            if (m.groups) {\n              const date = m.groups[\"date\"];\n              const filename = m.groups[\"filename\"];\n              console.info(date, filename);\n              this._dailyFileNamesByDate.set(date, filename);\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      } finally {\n        this._dailyInitialized = true;\n      }\n    }\n  }\n\n  dailyMeteorsAvailable(date: DateTime): boolean {\n    const d = date.toFormat(\"yyyyMMdd\");\n    return this._dailyFileNamesByDate.has(d);\n  }\n}\n","import { createContext, useContext } from \"react\";\nimport useConstant from \"use-constant\";\n\nimport { GMN } from \"./data/GMN\";\n\nexport interface GMNContext {\n  gmn: GMN;\n}\n\nconst Context = createContext<GMNContext | null>(null);\n\nexport function GMNProvider({ children }) {\n  const gmn = useConstant(() => new GMN());\n\n  const contextValue = { gmn };\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n\nexport function useGMN(): GMNContext {\n  const c = useContext(Context);\n  if (c) return c;\n  throw Error(\"useGMN used outside GMNProvider\");\n}\n","import { useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Skeleton,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/lab\";\nimport { DateTime } from \"luxon\";\nimport useAsyncEffect from \"use-async-effect\";\n\nimport { useGMN } from \"../GMNProvider\";\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n  onLoadMeteors: (date: DateTime) => void;\n}\n\nexport function LoadDailyMeteorsDialog(props: Props) {\n  const { open, onClose, onLoadMeteors } = props;\n\n  const { gmn } = useGMN();\n  const [availablityInitialized, setAvailablityInitialized] = useState(\n    gmn.dailyInitialized\n  );\n  useAsyncEffect(async () => {\n    if (open && !availablityInitialized) {\n      await gmn.initDailyMeteorsAvailable();\n      setAvailablityInitialized(true);\n    }\n  });\n\n  const [date, setDate] = useState<DateTime | null>(null);\n  // const today = DateTime.now();\n\n  const DailyMeteorsDatePicker = () => {\n    return (\n      <DatePicker\n        label=\"dd/mm/yyyy\"\n        value={date}\n        onChange={setDate}\n        renderInput={(params) => <TextField {...params} />}\n        inputFormat=\"dd/MM/yyyy\"\n        shouldDisableDate={(date) =>\n          date > DateTime.now() || !gmn.dailyMeteorsAvailable(date)\n        }\n      />\n    );\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Load Daily Meteors</DialogTitle>\n      <DialogContent>\n        {!availablityInitialized && (\n          <Skeleton>\n            <DailyMeteorsDatePicker />\n          </Skeleton>\n        )}\n        {availablityInitialized && <DailyMeteorsDatePicker />}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={date === null}\n          onClick={() => {\n            console.info(date);\n            if (date) onLoadMeteors(date);\n          }}\n        >\n          Load\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import {\n  FormControl,\n  Stack,\n  Button,\n  InputLabel,\n  Select,\n  SelectChangeEvent,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { ActiveShowerData } from \"../../interfaces\";\nimport { store } from \"../../store\";\nimport { formatter } from \"../../App\";\n\nexport function ShowerFilter() {\n  const activeShowers = store.useState((s) => s.activeShowers);\n  const filterShowers = store.useState((s) => s.filter.showers);\n\n  return (\n    <>\n      <FormControl sx={{ m: 1, width: 280 }}>\n        <InputLabel id=\"showers-label\">Showers</InputLabel>\n        <Select\n          labelId=\"showers-label\"\n          multiple\n          value={activeShowers.filter((s) => filterShowers.includes(s.shower))}\n          input={<OutlinedInput label=\"Showers\" />}\n          renderValue={(selected) => {\n            if (selected.length === 0) return \"(none)\";\n            const ss = [...selected];\n            const names = ss.map((s) => s.shower.name);\n            return names.join(\", \");\n          }}\n          onChange={(event: SelectChangeEvent<ActiveShowerData[]>) => {\n            const { value } = event.target;\n            if (typeof value === \"string\") return;\n            store.update((s) => {\n              s.filter.showers = value.map((s) => s.shower);\n            });\n          }}\n          MenuProps={MenuProps}\n        >\n          {activeShowers.map((s) => (\n            <MenuItem key={s.shower.code} value={s as any}>\n              <Checkbox checked={filterShowers.includes(s.shower)} />\n              <ListItemText>\n                {s.shower.name}\n                {\" (\"}\n                {formatter.format(s.meteors.length)}\n                {\")\"}\n              </ListItemText>\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Stack direction=\"row\">\n        <Button\n          onClick={() => {\n            store.update((s) => {\n              s.filter.showers = activeShowers.map((s) => s.shower);\n            });\n          }}\n        >\n          all\n        </Button>\n        <Button\n          onClick={() => {\n            store.update((s) => {\n              s.filter.showers = [];\n            });\n          }}\n        >\n          none\n        </Button>\n      </Stack>\n    </>\n  );\n}\n\nconst ITEM_HEIGHT = 54;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  autoFocus: false, // kludge to stop initial scoll to end\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\n      width: 280,\n    },\n  },\n};\n","import { Box, Slider } from \"@mui/material\";\n\nimport { Magnitude } from \"../../interfaces\";\nimport { MIN_MAGNITUDE, MAX_MAGNITUDE } from \"../../constants\";\nimport { store } from \"../../store\";\n\nexport function MagnitudeFilter() {\n  const { min = MIN_MAGNITUDE, max = MAX_MAGNITUDE } = store.useState(\n    (s) => s.filter.magnitude\n  );\n\n  return (\n    <Box sx={{ my: \"16px\", px: \"24px\" }}>\n      <Slider\n        min={MIN_MAGNITUDE}\n        max={MAX_MAGNITUDE}\n        value={[min, max]}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        marks={[\n          {\n            value: MIN_MAGNITUDE,\n            label: `< ${MIN_MAGNITUDE}`,\n          },\n          {\n            value: 0,\n            label: \"Magnitude\",\n          },\n          {\n            value: MAX_MAGNITUDE,\n            label: `> ${MAX_MAGNITUDE}`,\n          },\n        ]}\n        onChange={(event, value, index) => {\n          store.update((s) => {\n            if (typeof value === \"number\") {\n              if (index === 0)\n                s.filter.magnitude.min = valueUnless(MIN_MAGNITUDE, value);\n              else s.filter.magnitude.max = valueUnless(MAX_MAGNITUDE, value);\n            } else {\n              s.filter.magnitude.min = valueUnless(MIN_MAGNITUDE, value[0]);\n              s.filter.magnitude.max = valueUnless(MAX_MAGNITUDE, value[1]);\n            }\n          });\n        }}\n      />\n    </Box>\n  );\n}\n\nfunction valueUnless(\n  unless: Magnitude,\n  value: Magnitude\n): Magnitude | undefined {\n  return value === unless ? undefined : value;\n}\n","import { FormControl, TextField } from \"@mui/material\";\n\nimport { StationData, StationCode } from \"../../interfaces\";\nimport { store } from \"../../store\";\n\nexport function StationPrefixFilter() {\n  const stations = store.useState((s) => s.stations);\n  const prefixes = store.useState((s) => s.filter.stations.prefixes);\n\n  return (\n    <FormControl sx={{ m: 1, width: 280 }}>\n      <TextField\n        label=\"Station prefixes\"\n        value={prefixes}\n        onChange={(event) => {\n          const prefixes = event.target.value.toUpperCase();\n          store.update((s) => {\n            s.filter.stations = { prefixes, codes: filter(stations, prefixes) };\n          });\n        }}\n      />\n    </FormControl>\n  );\n}\n\nfunction filter(stations: StationData[], rawPrefixes: string): StationCode[] {\n  rawPrefixes = rawPrefixes.trim();\n  if (rawPrefixes === \"\") return stations.map((s) => s.code);\n\n  const prefixes = rawPrefixes.split(/[^a-zA-Z0-9]+/);\n\n  const filtered = new Set<StationCode>();\n  for (const prefix of prefixes) {\n    for (const station of stations) {\n      if (station.code.startsWith(prefix)) filtered.add(station.code);\n    }\n  }\n\n  return [...filtered];\n}\n","import {\n  FormControl,\n  Stack,\n  Button,\n  InputLabel,\n  Select,\n  SelectChangeEvent,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { StationData } from \"../../interfaces\";\nimport { store } from \"../../store\";\n\nexport function StationFilter() {\n  const stations = store.useState((s) => s.stations);\n  const codes = store.useState((s) => s.filter.stations.codes);\n\n  return (\n    <>\n      <FormControl sx={{ m: 1, width: 280 }}>\n        <InputLabel id=\"stations-label\">Stations</InputLabel>\n        <Select\n          labelId=\"stations-label\"\n          multiple\n          value={stations.filter((s) => codes.includes(s.code))}\n          input={<OutlinedInput label=\"Stations\" />}\n          renderValue={(selected) => {\n            if (selected.length === stations.length) return \"(all)\";\n            if (selected.length === 0) return \"(none)\";\n            const ss = [...selected];\n            const codes = ss.map((s) => s.code);\n            return codes.join(\", \");\n          }}\n          onChange={(event: SelectChangeEvent<StationData[]>) => {\n            const { value } = event.target;\n            if (typeof value === \"string\") return;\n            store.update((s) => {\n              s.filter.stations = {\n                codes: value.map((s) => s.code),\n                prefixes: \"\",\n              };\n            });\n          }}\n          MenuProps={MenuProps}\n        >\n          {stations.map((s) => (\n            <MenuItem key={s.code} value={s as any}>\n              <Checkbox checked={codes.includes(s.code)} />\n              <ListItemText>{s.code}</ListItemText>\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <Stack direction=\"row\">\n        <Button\n          onClick={() => {\n            store.update((s) => {\n              s.filter.stations = {\n                codes: stations.map((s) => s.code),\n                prefixes: \"\",\n              };\n            });\n          }}\n        >\n          all\n        </Button>\n        <Button\n          onClick={() => {\n            store.update((s) => {\n              s.filter.stations = {\n                codes: [],\n                prefixes: \"\",\n              };\n            });\n          }}\n        >\n          none\n        </Button>\n      </Stack>\n    </>\n  );\n}\n\nconst ITEM_HEIGHT = 54;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  autoFocus: false, // kludge to stop initial scoll to end\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 6.5 + ITEM_PADDING_TOP,\n      width: 280,\n    },\n  },\n};\n","import { Box, Typography, Toolbar, IconButton } from \"@mui/material\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\n\nimport { ShowerFilter } from \"./filter/ShowerFilter\";\nimport { MagnitudeFilter } from \"./filter/MagnitudeFilter\";\nimport { StationPrefixFilter } from \"./filter/StationPrefixFilter\";\nimport { StationFilter } from \"./filter/StationFilter\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nexport function Filter(props: Props) {\n  const { onClose } = props;\n\n  return (\n    <Box sx={{ width: 300 }}>\n      <Toolbar sx={{ justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\">Filter</Typography>\n        <IconButton onClick={onClose}>\n          <ChevronRightRoundedIcon />\n        </IconButton>\n      </Toolbar>\n      <ShowerFilter />\n      <MagnitudeFilter />\n      <StationPrefixFilter />\n      <StationFilter />\n    </Box>\n  );\n}\n","import {\n  Box,\n  Stack,\n  Typography,\n  Toolbar,\n  IconButton,\n  FormControlLabel,\n  Switch,\n} from \"@mui/material\";\nimport ChevronRightRoundedIcon from \"@mui/icons-material/ChevronRightRounded\";\n\nimport { store } from \"../store\";\n\ninterface Props {\n  onClose: () => void;\n}\n\nexport function Settings(props: Props) {\n  const { onClose } = props;\n\n  const { showClouds, light, cityLights, highResolutionTextures } =\n    store.useState((s) => s.settings);\n\n  return (\n    <Box sx={{ width: 300 }}>\n      <Toolbar sx={{ justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\">Settings</Typography>\n        <IconButton onClick={onClose}>\n          <ChevronRightRoundedIcon />\n        </IconButton>\n      </Toolbar>\n\n      <Stack direction=\"column\" sx={{ px: 2 }}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={highResolutionTextures}\n              onChange={(event) => {\n                store.update((s) => {\n                  s.settings.highResolutionTextures = event.target.checked;\n                });\n              }}\n            />\n          }\n          label=\"High resolution textures\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={showClouds}\n              onChange={(event) => {\n                store.update((s) => {\n                  s.settings.showClouds = event.target.checked;\n                });\n              }}\n            />\n          }\n          label=\"Clouds\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={light}\n              onChange={(event) => {\n                store.update((s) => {\n                  s.settings.light = event.target.checked;\n                });\n              }}\n            />\n          }\n          label=\"Light\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={cityLights}\n              onChange={(event) => {\n                store.update((s) => {\n                  s.settings.cityLights = event.target.checked;\n                });\n              }}\n            />\n          }\n          label=\"City lights\"\n        />\n      </Stack>\n    </Box>\n  );\n}\n","import { MeteorData } from \"../interfaces\";\nimport { formatDateTime } from \"../format\";\nimport \"./MeteorTooltip.css\";\n\nexport interface MeteorTooltipProps {\n  meteor: MeteorData;\n}\n\nexport function MeteorTooltip(props: MeteorTooltipProps) {\n  const { meteor } = props;\n  const { shower, beginTime, magnitude, duration, stationCodes } = meteor;\n\n  return (\n    <div className=\"meteorTooltip\">\n      <div className=\"showerCode\">{shower.code}</div>\n      <div className=\"beginTime\">{formatDateTime(beginTime)}</div>\n      <div className=\"magnitude\">Mag {magnitude}</div>\n      <div className=\"duration\">{duration}s</div>\n\n      <div className=\"stationCodes\">{stationCodes.join(\", \")}</div>\n    </div>\n  );\n}\n","import { useRef, useState, ReactNode } from \"react\";\nimport {\n  Matrix4,\n  Vector3,\n  Quaternion,\n  InstancedMesh,\n  Color,\n  Object3D,\n  Camera,\n} from \"three\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { Html } from \"@react-three/drei\";\n\nimport { MeteorData, XYZ } from \"../interfaces\";\nimport { MeteorTooltip } from \"../ui/MeteorTooltip\";\nimport { xyz } from \"./geometry\";\n\nconst MIN_WIDTH = 0.1;\nconst MAG_ZERO_WIDTH = 2;\n\nconst DEFAULT_COLOR = new Color(\"white\");\nconst HIGHLIGHTED_COLOR = new Color(\"goldenrod\");\nconst SELECTED_COLOR = new Color(\"hotpink\");\n\nconst BATCH_SIZE = 1000;\n\nconst ZERO_MATRIX = new Matrix4();\n\nexport interface InstancedMeteorsProps {\n  data: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData, focus: boolean) => void;\n  filteredMeteors: boolean[];\n}\n\nexport function InstancedMeteors(props: InstancedMeteorsProps) {\n  const { data, selectedMeteor, selectMeteor, filteredMeteors } = props;\n\n  const vertexShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      vUv = uv;\n      vColor = instanceColor;\n      gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position,1.0);\n    }\n  `;\n\n  const fragmentShader = `\n    varying vec2 vUv;\n    varying vec3 vColor;\n\n    void main() {\n      float x = vUv.x;\n      float y = vUv.y;\n      float c = (x < 0.5 ? x : (1.0 - x)) * 2.0;\n      float p = 0.75;\n      float l = y < p ? (y / p) : (1.0 - y) / (1.0 - p);\n      float opacity = c * l;\n      gl_FragColor = vec4(vColor, opacity);\n    }\n  `;\n\n  const ref = useRef<any[]>([]);\n\n  useFrame(({ camera }) => {\n    // console.info(\"frame!\", data.length);\n    const meshes = ref.current;\n    if (meshes) {\n      for (let j = 0; j < meshes.length; ++j) {\n        const mesh = meshes[j];\n        if (mesh) {\n          for (let i = 0; i < BATCH_SIZE; ++i) {\n            const meteor = data[j * BATCH_SIZE + i];\n            if (meteor) {\n              mesh.setMatrixAt(\n                i,\n                filteredMeteors[i]\n                  ? buildMeteorMatrix(meteor, camera.position)\n                  : ZERO_MATRIX\n              );\n              let color = DEFAULT_COLOR;\n              if (meteor === selectedMeteor) color = SELECTED_COLOR;\n              else if (meteor === hover?.meteor) color = HIGHLIGHTED_COLOR;\n              mesh.setColorAt(i, color);\n            } else {\n              mesh.setMatrixAt(i, ZERO_MATRIX);\n            }\n            mesh.instanceMatrix.needsUpdate = true;\n            if (mesh.instanceColor) mesh.instanceColor.needsUpdate = true;\n          }\n        }\n      }\n    }\n  });\n\n  const [hover, setHover] = useState<\n    { batch: number; meteor: MeteorData; instanceId: number } | undefined\n  >(undefined);\n\n  const { invalidate } = useThree();\n\n  const lastFilterMeteorsRef = useRef<boolean[]>([]);\n  if (filteredMeteors !== lastFilterMeteorsRef.current) {\n    lastFilterMeteorsRef.current = filteredMeteors;\n    invalidate();\n  }\n\n  const renderBatch = (batch: number, offset: number) => {\n    return (\n      <instancedMesh\n        key={`batch-${batch}`}\n        ref={(mesh) => {\n          if (ref.current) ref.current[batch] = mesh;\n        }}\n        args={[undefined, undefined, BATCH_SIZE /*data.length*/]}\n        onClick={(e) => {\n          if (e.instanceId !== undefined) {\n            const i = e.instanceId + offset;\n            selectMeteor(data[i], false);\n            invalidate();\n          }\n          e.stopPropagation();\n        }}\n        onDoubleClick={(e) => {\n          if (e.instanceId !== undefined) {\n            const i = e.instanceId + offset;\n            selectMeteor(data[i], true);\n            invalidate();\n          }\n          e.stopPropagation();\n        }}\n        onPointerOver={(e) => {\n          // console.info(\"onPointerOver\", e.instanceId);\n          const { instanceId } = e;\n          if (instanceId !== undefined) {\n            const i = instanceId + offset;\n            const meteor = data[i];\n            setHover({ batch, meteor, instanceId });\n          }\n        }}\n        onPointerOut={(e) => {\n          setHover(undefined);\n        }}\n      >\n        <planeGeometry args={[1, 1]} />\n        <shaderMaterial\n          vertexShader={vertexShader}\n          fragmentShader={fragmentShader}\n          transparent={true}\n          depthWrite={false}\n        />\n\n        {hover && hover.batch === batch && (\n          <Html\n            calculatePosition={(el, camera, size) =>\n              calculateTooltipPosition(el, camera, size, hover?.instanceId)\n            }\n          >\n            <MeteorTooltip meteor={hover.meteor} />\n          </Html>\n        )}\n      </instancedMesh>\n    );\n  };\n\n  const batches: ReactNode[] = [];\n  const n = data.length;\n  const numBatches = Math.ceil(n / BATCH_SIZE);\n  // console.info(\n  //   `[InstanceMeteors] ${n} meteors in ${numBatches} batches of ${BATCH_SIZE}`\n  // );\n  for (let j = 0; j < numBatches; ++j) {\n    batches.push(renderBatch(j, j * BATCH_SIZE));\n  }\n\n  return <>{batches}</>;\n}\n\nconst v1 = new Vector3();\nconst m = new Matrix4();\nfunction calculateTooltipPosition(\n  el: Object3D,\n  camera: Camera,\n  size: { width: number; height: number },\n  index: number | undefined\n) {\n  if (el.parent instanceof InstancedMesh && index !== undefined) {\n    el.parent.getMatrixAt(index, m);\n  } else {\n    // hide tooltip offscreen\n    return [-9999999, -9999999];\n  }\n  const objectPos = v1.setFromMatrixPosition(m);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [\n    objectPos.x * widthHalf + widthHalf,\n    -(objectPos.y * heightHalf) + heightHalf,\n  ];\n}\n\nfunction buildMeteorMatrix(\n  meteor: MeteorData,\n  cameraPosition: Vector3\n): Matrix4 {\n  const { begin, end, magnitude } = meteor;\n\n  const brightness = 1 - magnitude * 0.2;\n\n  const tail = xyz(begin);\n  const head = xyz(end);\n\n  const [tx, ty, tz] = tail;\n  const [hx, hy, hz] = head;\n\n  const center: XYZ = [(tx + hx) / 2, (ty + hy) / 2, (tz + hz) / 2];\n  const [cx, cy, cz] = center;\n  const position = new Vector3(cx, cy, cz);\n\n  const vector = new Vector3(\n    head[0] - tail[0],\n    head[1] - tail[1],\n    head[2] - tail[2]\n  );\n  const length = vector.length();\n  const width = Math.max(MIN_WIDTH, MAG_ZERO_WIDTH * brightness);\n  const direction = vector.clone();\n  direction.normalize();\n\n  // build matrix\n\n  const view = position.clone().sub(cameraPosition).normalize();\n  const perp = direction.clone().cross(view).normalize();\n  const up = direction.clone().cross(perp).normalize();\n  const right = direction.clone().cross(up);\n\n  const rotation = new Matrix4();\n  const xAxis = right;\n  const yAxis = direction;\n  const zAxis = up;\n  rotation.makeBasis(xAxis, yAxis, zAxis);\n\n  const quaternion = new Quaternion();\n  quaternion.setFromRotationMatrix(rotation);\n\n  const scale = new Vector3(width, length, 1);\n\n  const m = new Matrix4();\n  m.compose(position, quaternion, scale);\n  return m;\n}\n","import { createRef } from \"react\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { OrbitControls as OrbitControlsImpl } from \"three-stdlib\";\n\nimport { CameraControlData } from \"../interfaces\";\nimport { DEFAULT_UP } from \"../constants\";\nimport { position, vector3EqualsXYZ } from \"./geometry\";\n\nexport const CAMERA_CONFIG = {\n  fov: 75,\n  near: 10,\n  far: 100000,\n  position: position(50.22, -4.95, 1500),\n};\n\nexport interface CameraControlsProps extends CameraControlData {}\n\nexport function CameraControls(props: CameraControlsProps) {\n  const { up } = props;\n\n  // console.info(\"[CameraControls]\", up);\n\n  const ref = createRef<OrbitControlsImpl>();\n\n  const state = useThree();\n  useFrame(() => {\n    const [x, y, z] = up;\n    const { camera } = state;\n    if (!vector3EqualsXYZ(camera.up, up)) {\n      if (up === DEFAULT_UP && ref.current) {\n        ref.current.reset();\n      }\n\n      camera.up.set(x, y, z);\n      camera.updateProjectionMatrix();\n    }\n  });\n\n  return (\n    <OrbitControls ref={ref} {...props} zoomSpeed={0.1} rotateSpeed={0.1} />\n  );\n}\n","import { Canvas } from \"@react-three/fiber\";\nimport { useTexture } from \"@react-three/drei\";\n\nimport { MeteorData, SettingsData, CameraControlData } from \"../interfaces\";\nimport {\n  EARTH_RADIUS,\n  DEFAULT_CAMERA_CONTROL,\n  CLOUD_HEIGHT,\n  CITY_LIGHTS_COLOR,\n  AMBIENT_LIGHT_INTENSITY,\n  BLACK,\n} from \"../constants\";\n\nimport { position } from \"./geometry\";\n\nimport { /*Marker, */ MarkerProps } from \"./Marker\";\nimport { InstancedMeteors } from \"./InstancedMeteors\";\nimport { CameraControls, CAMERA_CONFIG } from \"./CameraControls\";\n\nimport \"./Globe.css\";\n\nexport interface GlobeProps {\n  markers: MarkerProps[];\n  meteors: MeteorData[];\n  selectedMeteor?: MeteorData;\n  selectMeteor: (meteor: MeteorData, focus: boolean) => void;\n  filteredMeteors: boolean[];\n  settings: SettingsData;\n  cameraControl: CameraControlData;\n  setCameraControl: (cameraControl: CameraControlData) => void;\n}\n\nexport function Globe(props: GlobeProps) {\n  const {\n    /*markers,*/ meteors,\n    selectedMeteor,\n    selectMeteor,\n    filteredMeteors,\n    settings,\n    cameraControl,\n    setCameraControl,\n  } = props;\n\n  const material = useTexture(chooseTextures(settings));\n  const clouds = useTexture({\n    map: \"/meteor-globe/textures/fair_clouds_4k.jpeg\",\n  });\n  return (\n    <Canvas className=\"globeCanvas\" frameloop=\"demand\" camera={CAMERA_CONFIG}>\n      <CameraControls {...cameraControl} />\n      <ambientLight intensity={AMBIENT_LIGHT_INTENSITY} />\n      <directionalLight\n        color=\"white\"\n        position={position(0, 0, 1)}\n        visible={settings.light}\n      />\n      <mesh\n        onDoubleClick={() => {\n          setCameraControl(DEFAULT_CAMERA_CONTROL);\n        }}\n      >\n        <sphereGeometry args={[EARTH_RADIUS, 128, 128]} />\n        <meshPhongMaterial\n          {...material}\n          emissive={\n            settings.light || !settings.cityLights ? BLACK : CITY_LIGHTS_COLOR\n          }\n        />\n      </mesh>\n      <mesh visible={settings.showClouds}>\n        <sphereGeometry args={[EARTH_RADIUS + CLOUD_HEIGHT, 128, 128]} />\n        <meshBasicMaterial color={0xffffff} alphaMap={clouds.map} transparent />\n      </mesh>\n      {/*      {markers.map((m) => (\n        <Marker key={`marker-${m.identifier}`} {...m} />\n      ))}\n*/}\n      <InstancedMeteors\n        data={meteors}\n        selectedMeteor={selectedMeteor}\n        selectMeteor={selectMeteor}\n        filteredMeteors={filteredMeteors}\n      />\n    </Canvas>\n  );\n}\n\nfunction chooseTextures(settings: SettingsData): {\n  [k: string]: string;\n} {\n  const { highResolutionTextures } = settings;\n  const textures: any = {\n    map: `/meteor-globe/textures/2_no_clouds_${\n      highResolutionTextures ? \"8k\" : \"4k\"\n    }.jpeg`,\n    bumpMap: \"/meteor-globe/textures/elev_bump_4k.jpeg\",\n    specularMap: \"/meteor-globe/textures/water_4k.png\",\n    emissiveMap: \"/meteor-globe/textures/5_night_4k.jpeg\",\n  };\n\n  return textures;\n}\n","import { useEffect, useState, useCallback } from \"react\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  Link,\n  IconButton,\n  Alert,\n  Snackbar,\n  Drawer,\n  Tooltip,\n} from \"@mui/material\";\n\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport SettingsRoundedIcon from \"@mui/icons-material/SettingsRounded\";\n\nimport { LocalizationProvider } from \"@mui/lab\";\nimport DateAdapter from \"@mui/lab/AdapterLuxon\";\n\nimport Div100vh from \"react-div-100vh\";\nimport { Settings as LuxonSettings } from \"luxon\";\n\nimport { initCameras } from \"./data/cameras\";\nimport {\n  meteorDataInfoFromParams,\n  loadMeteors,\n  filterMeteors,\n} from \"./data/meteors\";\n\nimport { AppMenu } from \"./ui/AppMenu\";\nimport { MeteorInfo } from \"./ui/MeteorInfo\";\nimport { LoadDailyMeteorsDialog } from \"./ui/LoadDailyMeteorsDialog\";\nimport { Filter } from \"./ui/Filter\";\nimport { Settings } from \"./ui/Settings\";\n\nimport { Globe } from \"./3d/Globe\";\nimport { xyz, localUp } from \"./3d/geometry\";\n\nimport { MeteorDataInfo, MeteorData, CameraControlData } from \"./interfaces\";\nimport { store } from \"./store\";\nimport { useGMN } from \"./GMNProvider\";\nimport { saveSettings } from \"./settings\";\nimport { DEFAULT_CAMERA_CONTROL } from \"./constants\";\n\nimport \"./App.css\";\n\nLuxonSettings.defaultZone = \"UTC\";\n\nconst queryParams = new URLSearchParams(window.location.search);\nexport const formatter = new Intl.NumberFormat();\n\nexport default function App() {\n  const [error, setError] = useState<string | undefined>();\n\n  const cameraControl = store.useState((s) => s.cameraControl);\n  const setCameraControl = useCallback((cameraControl: CameraControlData) => {\n    store.update((s) => {\n      s.cameraControl = cameraControl;\n    });\n  }, []);\n  const resetView = useCallback(() => {\n    setCameraControl(DEFAULT_CAMERA_CONTROL);\n  }, [setCameraControl]);\n\n  const markers = store.useState((s) => s.markers);\n  const meteors = store.useState((s) => s.meteors);\n  const selectedMeteor = store.useState((s) => s.selectedMeteor);\n  const selectMeteor = (m: MeteorData, focus: boolean) => {\n    console.info(\"SELECT\", m);\n    store.update((s) => {\n      s.selectedMeteor = m;\n      if (focus) s.cameraControl = focusedMeteorCameraControl(m);\n    });\n  };\n  const focusedMeteorCameraControl = (m: MeteorData) => {\n    const { latitude, longitude } = m.end;\n    return {\n      minDistance: 100,\n      maxDistance: 10000,\n      target: xyz(m.end),\n      up: localUp(latitude, longitude),\n    };\n  };\n  const focusMeteor = (m: MeteorData) => {\n    console.info(\"FOCUS\", m);\n    store.update((s) => {\n      s.cameraControl = focusedMeteorCameraControl(m);\n    });\n  };\n\n  const filter = store.useState((s) => s.filter);\n\n  useEffect(initCameras, []);\n\n  const { gmn } = useGMN();\n\n  const tryLoadMeteors = useCallback(\n    (info: MeteorDataInfo) => {\n      loadMeteors(info)\n        .then(() => {\n          resetView();\n        })\n        .catch((e) => {\n          console.error(\"loading\", info, e);\n          setError(`Failed to load ${info.title}`);\n        });\n    },\n    [resetView]\n  );\n\n  useEffect(() => {\n    tryLoadMeteors(meteorDataInfoFromParams(queryParams));\n  }, [tryLoadMeteors]);\n\n  const [filterVisible, setFilterVisible] = useState(false);\n  const meteorVisibility = filterMeteors(filter, meteors);\n\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const settings = store.useState((s) => s.settings);\n  store.subscribe((s) => s.settings, saveSettings);\n\n  const Header = () => {\n    const loading = store.useState((s) => s.loading);\n    const title = store.useState((s) => s.meteorDataInfo.title);\n    const numMeteors = store.useState((s) => s.meteors.length);\n    const numVisibleMeteors = meteorVisibility.filter((v) => v).length;\n    const [menuVisible, setMenuVisible] = useState(false);\n    const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement | null>(null);\n    const [loadDailyMeteorsDialogOpen, setLoadDailyMeteorsDialogOpen] =\n      useState(false);\n\n    const titleSuffix = () => {\n      const n = formatter.format(numMeteors);\n      if (numMeteors === numVisibleMeteors) {\n        switch (numMeteors) {\n          case 1:\n            return \"1 meteor\";\n          default:\n            return `${n} meteors`;\n        }\n      }\n      const v = formatter.format(numVisibleMeteors);\n      switch (numMeteors) {\n        case 1:\n          return \"0 of 1 meteor\";\n        default:\n          return `${v} of ${n} meteors`;\n      }\n    };\n\n    return (\n      <>\n        <AppBar color=\"transparent\" sx={{ boxShadow: \"none\" }}>\n          <Toolbar sx={{ justifyContent: \"space-between\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                flexGrow: 1,\n              }}\n            >\n              <IconButton\n                onClick={(event) => {\n                  setMenuVisible(!menuVisible);\n                  setMenuAnchorEl(event.currentTarget);\n                }}\n              >\n                <MenuRoundedIcon />\n              </IconButton>\n              <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n                {loading && `Loading ${title}...`}\n                {!loading && `${title} — ${titleSuffix()}`}\n              </Typography>\n            </Box>\n            <Tooltip title=\"Filter visible meteors\">\n              <IconButton\n                onClick={(event) => {\n                  setFilterVisible(!filterVisible);\n                }}\n              >\n                <SearchRoundedIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        <AppMenu\n          open={menuVisible}\n          onClose={() => setMenuVisible(false)}\n          anchorEl={menuAnchorEl}\n          onLoadMeteors={(info: MeteorDataInfo) => {\n            tryLoadMeteors(info);\n            setMenuVisible(false);\n          }}\n          showLoadDailyDialog={() => {\n            setLoadDailyMeteorsDialogOpen(true);\n            setMenuVisible(false);\n          }}\n          resetView={() => {\n            resetView();\n            setMenuVisible(false);\n          }}\n        />\n        <LoadDailyMeteorsDialog\n          open={loadDailyMeteorsDialogOpen}\n          onClose={() => setLoadDailyMeteorsDialogOpen(false)}\n          onLoadMeteors={(date) => {\n            const info = gmn.dailyMeteorsInfo(date);\n            console.info(info);\n            tryLoadMeteors(info);\n            setLoadDailyMeteorsDialogOpen(false);\n          }}\n        />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={DateAdapter}>\n        <Snackbar open={error !== undefined}>\n          <Alert severity=\"error\" onClose={() => setError(undefined)}>\n            {error}\n          </Alert>\n        </Snackbar>\n        <Div100vh style={{ display: \"flex\", flexFlow: \"column\" }}>\n          <Header />\n          <Box sx={{ flex: \"1 1 auto\" }}>\n            <Globe\n              markers={[...markers.values()]}\n              meteors={meteors}\n              filteredMeteors={meteorVisibility}\n              selectedMeteor={selectedMeteor}\n              selectMeteor={selectMeteor}\n              settings={settings}\n              cameraControl={cameraControl}\n              setCameraControl={setCameraControl}\n            />\n            {selectedMeteor && (\n              <MeteorInfo\n                meteor={selectedMeteor}\n                focusMeteor={() => {\n                  focusMeteor(selectedMeteor);\n                }}\n              />\n            )}\n          </Box>\n          <Box sx={{ position: \"absolute\", right: 24, bottom: 0 }}>\n            <Tooltip title=\"App settings\">\n              <IconButton\n                onClick={(event) => {\n                  setSettingsVisible(true);\n                }}\n              >\n                <SettingsRoundedIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n          <Footer />\n          <Drawer\n            anchor=\"right\"\n            open={filterVisible}\n            onClose={() => {\n              setFilterVisible(false);\n            }}\n            variant=\"persistent\"\n          >\n            <Filter\n              onClose={() => {\n                setFilterVisible(false);\n              }}\n            />\n          </Drawer>\n          <Drawer\n            anchor=\"right\"\n            open={settingsVisible}\n            onClose={() => {\n              setSettingsVisible(false);\n            }}\n          >\n            <Settings\n              onClose={() => {\n                setSettingsVisible(false);\n              }}\n            />\n          </Drawer>\n        </Div100vh>\n      </LocalizationProvider>\n    </>\n  );\n}\n\nfunction Footer() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}{\" \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://github.com/robagar/meteor-globe\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Rob Agar\n      </Link>\n      {\" (UK003C) \"}\n      {\" — \"}\n      {\"Meteor data from the \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://globalmeteornetwork.org/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        Global Meteor Network\n      </Link>\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport \"@fontsource/roboto\";\n\nimport theme from \"./theme\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { GMNProvider } from \"./GMNProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <React.Suspense fallback={<div>Loading... </div>}>\n        <GMNProvider>\n          <App />\n        </GMNProvider>\n      </React.Suspense>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}